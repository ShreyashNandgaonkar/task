{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _flowRight2 = require('lodash/flowRight');\n\nvar _flowRight3 = _interopRequireDefault(_flowRight2);\n\nvar _flow2 = require('lodash/flow');\n\nvar _flow3 = _interopRequireDefault(_flow2);\n\nvar _pickBy2 = require('lodash/pickBy');\n\nvar _pickBy3 = _interopRequireDefault(_pickBy2);\n\nvar _flattenDeep2 = require('lodash/flattenDeep');\n\nvar _flattenDeep3 = _interopRequireDefault(_flattenDeep2);\n\nvar _uniq2 = require('lodash/uniq');\n\nvar _uniq3 = _interopRequireDefault(_uniq2);\n\nvar _pick2 = require('lodash/pick');\n\nvar _pick3 = _interopRequireDefault(_pick2);\n\nvar _extend2 = require('lodash/extend');\n\nvar _extend3 = _interopRequireDefault(_extend2);\n\nexports.extendArray = extendArray;\nexports.combineHandlers = combineHandlers;\nexports.getPropertiesByEnding = getPropertiesByEnding;\nexports.getObjectWherePropertyEndsWith = getObjectWherePropertyEndsWith;\nexports.composeReducer = composeReducer;\nexports.composeReducers = composeReducers;\nexports.getKeysForObjects = getKeysForObjects;\nexports.isKeyGriddleHook = isKeyGriddleHook;\nexports.removeHooksFromObject = removeHooksFromObject;\nexports.removeKeyNamePartFromObject = removeKeyNamePartFromObject;\nexports.getBeforeHooksFromObject = getBeforeHooksFromObject;\nexports.getBeforeReduceHooksFromObject = getBeforeReduceHooksFromObject;\nexports.getAfterHooksFromObject = getAfterHooksFromObject;\nexports.getAfterReduceHooksFromObject = getAfterReduceHooksFromObject;\nexports.composeReducerObjects = composeReducerObjects;\nexports.callReducerWithBeforeAfterPipe = callReducerWithBeforeAfterPipe;\nexports.buildGriddleReducer = buildGriddleReducer;\nexports.getReducersByWordEnding = getReducersByWordEnding;\nexports.wrapMethodsByWordEnding = wrapMethodsByWordEnding;\nexports.combineAndEnhanceComponents = combineAndEnhanceComponents;\nexports.combineAndEnhanceContainers = combineAndEnhanceContainers;\nexports.combineAndWrapWithContainerComponents = combineAndWrapWithContainerComponents;\nexports.buildGriddleComponents = buildGriddleComponents;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/** Extends an array rather than known list of objects */\n//TODO: Look at using object.assign\n\n\nfunction extendArray(objects) {\n  //return an empty object if we don't have anything to combine\n  if (!objects) {\n    return {};\n  } //add empty object to the beginning for Object.extend\n\n\n  objects.unshift({}); //Buid the combined object\n\n  var combinedObject = _extend3.default.apply(this, objects); //TODO: why are we doing this? is it necessary\n\n\n  objects.shift(); //return the combined object\n\n  return combinedObject;\n}\n\nfunction combineHandlers(functionArray) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    functionArray.forEach(function (func) {\n      return !!func && func.apply(undefined, args);\n    });\n  };\n} //from MDN\n\n\nif (!String.prototype.endsWith) {\n  String.prototype.endsWith = function (searchString, position) {\n    var subjectString = this.toString();\n\n    if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\n      position = subjectString.length;\n    }\n\n    position -= searchString.length;\n    var lastIndex = subjectString.indexOf(searchString, position);\n    return lastIndex !== -1 && lastIndex === position;\n  };\n}\n/**\n * Finds properties on an object that end in specified word\n * @param {string} ending - The string that properties should be found ending with\n * @param {Object} object - The object to find keys on\n */\n\n\nfunction getPropertiesByEnding(ending, object) {\n  return Object.keys(object).filter(function (name) {\n    return name.endsWith(ending);\n  });\n}\n/** Creates a new object containing only properties that end with specified ending\n * @param {string} ending - The string that properties should be found ending with\n * @param {Object} object - The object to find keys on\n */\n\n\nfunction getObjectWherePropertyEndsWith(ending, object) {\n  var keys = getPropertiesByEnding(ending, object);\n  return (0, _pick3.default)(object, keys);\n}\n/** Creates a new reducer by taking the output of the first reducer as state to the second\n * @param {Object} currentReducer - reducerMethod (state, action) to that we want to run as the state parameter for second reducer\n * @param {Object} previousReducer - reducerMethod (state, action) to run second\n */\n\n\nfunction composeReducer(nextReducer, previousReducer) {\n  // compose the reducers when both parameters are functions\n  if (typeof nextReducer === 'function' && typeof previousReducer === 'function') {\n    return function (state, action) {\n      return previousReducer(nextReducer(state, action), action);\n    };\n  } // return the nextReducer\n\n\n  return nextReducer;\n}\n/** Creates a composed reducer method from an array of reducer methods\n * @param {Object <array>} reducers - An array of reducer methods to compose\n */\n\n\nfunction composeReducers(reducers) {\n  // flip the array (since we want to apply from left-to-right and compose each reducer\n  return reducers.reverse().reduce(function (previous, next) {\n    return composeReducer(next, previous);\n  }, {});\n}\n/** Obtains all the unique keys between an array of objects\n * @param {Object <array>} objects - An array of objects\n */\n\n\nfunction getKeysForObjects(objects) {\n  return (0, _uniq3.default)((0, _flattenDeep3.default)(objects.map(function (o) {\n    return Object.keys(o);\n  })));\n}\n/** Determines if a given key is a Griddle hook reducer\n * @param {string} key - the key to check if it refers to a Griddle hook\n */\n\n\nfunction isKeyGriddleHook(key) {\n  return key === 'BEFORE_REDUCE' || key === 'AFTER_REDUCE' || key.endsWith('AFTER') || key.endsWith('BEFORE');\n}\n/** Removes Griddle hooks from a reducer object\n * @param {Object} reducerObject - The reducer object to remove hooks from\n */\n\n\nfunction removeHooksFromObject(reducerObject) {\n  return (0, _pickBy3.default)(reducerObject, function (value, key) {\n    if (isKeyGriddleHook(key)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n/** Removes a given string from any key on the object that contains that string\n * @param {Object} reducer object - the reducer object to update keys on\n * @param {string} keyString - the string to remove from all keys\n*/\n\n\nfunction removeKeyNamePartFromObject(reducerObject, keyString) {\n  return Object.keys(reducerObject).reduce(function (previous, current) {\n    previous[current.replace(keyString, '')] = reducerObject[current];\n    return previous;\n  }, {});\n}\n/** Gets an object that consists of only the _BEFORE hooks. _BEFORE will be removed from the key.\n * @param {Object} reducerObject - the reducer to get the _BEFORE hooks from\n */\n\n\nfunction getBeforeHooksFromObject(reducerObject) {\n  return removeKeyNamePartFromObject((0, _pickBy3.default)(reducerObject, function (value, key) {\n    return key.endsWith('BEFORE');\n  }), '_BEFORE');\n}\n/** Gets an object that consists of only the BEFORE_REDUCE hooks.\n * @param {Object} reducerObject - the reducer to get the BEFORE_REDUCE hooks from\n */\n\n\nfunction getBeforeReduceHooksFromObject(reducerObject) {\n  return (0, _pickBy3.default)(reducerObject, function (value, key) {\n    return key === 'BEFORE_REDUCE';\n  });\n}\n/** Gets an object that conists of only the _AFTER hooks. _AFTER will be removed from the key\n * @param {Object} reducerObject - the reducer to get the _AFTER hooks from\n */\n\n\nfunction getAfterHooksFromObject(reducerObject) {\n  return removeKeyNamePartFromObject((0, _pickBy3.default)(reducerObject, function (value, key) {\n    return key.endsWith('AFTER');\n  }), '_AFTER');\n}\n/** Gets an object that conists of only the AFTER_REDUCE hooks.\n * @param {Object} reducerObject - the reducer to get the AFTER_REDUCE hooks from\n */\n\n\nfunction getAfterReduceHooksFromObject(reducerObject) {\n  return (0, _pickBy3.default)(reducerObject, function (value, key) {\n    return key === 'AFTER_REDUCE';\n  });\n}\n/** Combines the given reducer objects left to right\n * @param {Object <array>} reducerObjects - An array containing objects consisting of reducer methods as properties\n */\n\n\nfunction composeReducerObjects(reducerObjects) {\n  if (reducerObjects.length < 1) return null;\n  return reducerObjects.reverse().reduce(function (previous, next) {\n    // if we don't have any reducers in previous object continue with next\n    if (previous === null) {\n      return next;\n    } //mutate the previous object by composing the reducer methods\n\n\n    for (var key in next) {\n      previous[key] = composeReducer(next[key], previous[key]);\n    }\n\n    return previous;\n  }, null);\n}\n/** Builds a new reducer that composes hooks and extends standard reducers between reducerObjects\n * @param {Object <array>} reducers - An array of reducerObjects\n * Note: this used to be exported, but the same properties are available from buildGriddleReducer.\n * TODO: This method should be broken down a bit -- it's doing too much currently\n */\n\n\nfunction buildGriddleReducerObject(reducerObjects) {\n  var reducerMethodsWithoutHooks = [];\n  var beforeHooks = [];\n  var afterHooks = [];\n  var beforeReduceAll = [];\n  var afterReduceAll = [];\n\n  if (reducerObjects.length > 0) {\n    // remove the hooks and extend the object\n    for (var key in reducerObjects) {\n      var reducer = reducerObjects[key];\n      reducerMethodsWithoutHooks.push(removeHooksFromObject(reducer));\n      beforeHooks.push(getBeforeHooksFromObject(reducer));\n      afterHooks.push(getAfterHooksFromObject(reducer));\n      beforeReduceAll.push(getBeforeReduceHooksFromObject(reducer));\n      afterReduceAll.push(getAfterReduceHooksFromObject(reducer));\n    }\n  }\n\n  var composedBeforeHooks = composeReducerObjects(beforeHooks);\n  var composedAfterHooks = composeReducerObjects(afterHooks);\n  var composedBeforeReduceAll = composeReducerObjects(beforeReduceAll);\n  var composedAfterReduceAll = composeReducerObjects(afterReduceAll); // combine the reducers without hooks\n\n  var combinedReducer = extendArray(reducerMethodsWithoutHooks);\n  var composed = composeReducerObjects([composedBeforeReduceAll, composedBeforeHooks, combinedReducer, composedAfterHooks, composedAfterReduceAll]);\n  return composed;\n}\n/** Builds a composed method containing the before / after reduce calls\n * @param {Object} reduceObject - The reducer that contains the composed reducer methods\n * @param {Object} state - The store state\n * @param {object} action - The action payload information\n*/\n\n\nfunction callReducerWithBeforeAfterPipe(reducerObject, state, action) {\n  var noop = function noop(passThroughState) {\n    return passThroughState;\n  };\n\n  var before = reducerObject.hasOwnProperty('BEFORE_REDUCE') ? reducerObject.BEFORE_REDUCE : noop;\n  var after = reducerObject.hasOwnProperty('AFTER_REDUCE') ? reducerObject.AFTER_REDUCE : noop;\n  var call = action.type && reducerObject[action.type] && reducerObject[action.type] || reducerObject.GRIDDLE_INITIALIZED || noop;\n\n  var partialCall = function (partialAction) {\n    return function (partialState) {\n      return call(partialState, partialAction);\n    };\n  }(action);\n\n  var method = (0, _flow3.default)([before, partialCall, after]);\n  return method(state);\n}\n/** Builds a griddleReducer function from a series of reducerObjects\n * @param {Object <array>} reducers - An array of reducerObjects\n*/\n\n\nfunction buildGriddleReducer(reducerObjects) {\n  var reducerObject = buildGriddleReducerObject(reducerObjects);\n\n  var reducer = function reducer(state, action) {\n    return callReducerWithBeforeAfterPipe(reducerObject, state, action);\n  };\n\n  Object.assign(reducer, reducerObject);\n  return reducer;\n}\n/** Gets all reducers by a specific wordEnding\n * @param {array <Object>} reducers - An array of reducer objects\n * @param {string} ending - the wordEnding for the reducer name\n */\n\n\nfunction getReducersByWordEnding(reducers, ending) {\n  return reducers.reduce(function (previous, current) {\n    var keys = Object.keys(current).filter(function (name) {\n      return name.endsWith(ending);\n    });\n    var reducer = pick(current, keys); //TODO: clean this up it's a bit hacky\n\n    for (var key in current) {\n      if (!key.endsWith(ending)) {\n        continue;\n      }\n\n      var keyWithoutEnding = key.replace('_' + ending, \"\"); //make a new method that pipes output of previous into state of current\n      //this is to allow chaining these\n\n      var hasPrevious = previous.hasOwnProperty(keyWithoutEnding) && typeof previous[keyWithoutEnding] === 'function';\n      var previousReducer = hasPrevious ? previous[keyWithoutEnding] : undefined;\n      var currentReducer = reducer[key];\n      reducer[keyWithoutEnding] = wrapReducer(currentReducer, previousReducer);\n    } //override anything in previous (since this now calls previous to make sure we have helpers from both);\n\n\n    return extend(previous, reducer);\n  }, {});\n}\n/** Wraps all methods in another method by name and word ending\n  * @param {array<Object>} componentObjectArray - An array of component objects\n  * @param {string} ending - the word ending to determine what is a enhancer method\n  * @param {string} keyReplaceString - the word ending to apply when replacing the 'ending' parameter. Defaults to ''\n*/\n\n\nfunction wrapMethodsByWordEnding(componentArray, wordEnding) {\n  var keyReplaceString = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return componentArray.reduce(function (previous, current) {\n    var newObject = {};\n\n    for (var key in current) {\n      var keyWithoutEnhancer = key.replace(wordEnding, keyReplaceString);\n\n      if (key.endsWith(wordEnding) && (previous.hasOwnProperty(keyWithoutEnhancer) || current.hasOwnProperty(keyWithoutEnhancer))) {\n        // Determine if we are working with an HoC that wraps another HoC\n        newObject[keyWithoutEnhancer] = keyWithoutEnhancer.endsWith('Container') || keyWithoutEnhancer.endsWith('Enhancer') ? // If we are enhancing a container or enhancer flow this stuff since it's likely an HoC\n        (0, _flowRight3.default)(current[key], current[keyWithoutEnhancer] || previous[keyWithoutEnhancer]) : // Wrap the current component in the Enhancer or container\n        current[key](current[keyWithoutEnhancer] || previous[keyWithoutEnhancer]);\n      }\n    }\n\n    return (0, _pickBy3.default)(Object.assign(previous, current, newObject), function (v, k) {\n      return !k.endsWith(wordEnding);\n    });\n  }, {});\n}\n/** Gets a new components object with component per component name\n * @param {array<Object>} componentObjectArray - An array of component objects\n*/\n\n\nfunction combineAndEnhanceComponents(componentArray) {\n  return wrapMethodsByWordEnding(componentArray, 'Enhancer');\n}\n\nfunction combineAndEnhanceContainers(componentArray) {\n  return wrapMethodsByWordEnding(componentArray, 'ContainerEnhancer', 'Container');\n}\n/** Gets a new component object with containers wrapping standard components\n  (this is the same as enhance but just applying different naming conventions)\n * @param {array<Object>} componentObjectArray - An array of component objects\n*/\n\n\nfunction combineAndWrapWithContainerComponents(componentArray) {\n  return wrapMethodsByWordEnding(componentArray, 'Container');\n}\n/** Wraps components in their containers and enhancers\n * @param {array<Object>} componentObjectArray - An array of component objects\n*/\n\n\nfunction buildGriddleComponents(componentArray) {\n  //enhance the containers\n  var withEnhancedContainers = combineAndEnhanceContainers(componentArray); //enhance the components\n\n  var withEnhancedComponents = combineAndEnhanceComponents([withEnhancedContainers]); //wrap the components with the container\n\n  var withWrappedComponents = combineAndWrapWithContainerComponents([withEnhancedComponents]);\n  return withWrappedComponents;\n}","map":{"version":3,"sources":["C:/Users/shree/Desktop/smarte/node_modules/griddle-react/dist/module/utils/compositionUtils.js"],"names":["Object","defineProperty","exports","value","_flowRight2","require","_flowRight3","_interopRequireDefault","_flow2","_flow3","_pickBy2","_pickBy3","_flattenDeep2","_flattenDeep3","_uniq2","_uniq3","_pick2","_pick3","_extend2","_extend3","extendArray","combineHandlers","getPropertiesByEnding","getObjectWherePropertyEndsWith","composeReducer","composeReducers","getKeysForObjects","isKeyGriddleHook","removeHooksFromObject","removeKeyNamePartFromObject","getBeforeHooksFromObject","getBeforeReduceHooksFromObject","getAfterHooksFromObject","getAfterReduceHooksFromObject","composeReducerObjects","callReducerWithBeforeAfterPipe","buildGriddleReducer","getReducersByWordEnding","wrapMethodsByWordEnding","combineAndEnhanceComponents","combineAndEnhanceContainers","combineAndWrapWithContainerComponents","buildGriddleComponents","obj","__esModule","default","objects","unshift","combinedObject","apply","shift","functionArray","_len","arguments","length","args","Array","_key","forEach","func","undefined","String","prototype","endsWith","searchString","position","subjectString","toString","isFinite","Math","floor","lastIndex","indexOf","ending","object","keys","filter","name","nextReducer","previousReducer","state","action","reducers","reverse","reduce","previous","next","map","o","key","reducerObject","keyString","current","replace","reducerObjects","buildGriddleReducerObject","reducerMethodsWithoutHooks","beforeHooks","afterHooks","beforeReduceAll","afterReduceAll","reducer","push","composedBeforeHooks","composedAfterHooks","composedBeforeReduceAll","composedAfterReduceAll","combinedReducer","composed","noop","passThroughState","before","hasOwnProperty","BEFORE_REDUCE","after","AFTER_REDUCE","call","type","GRIDDLE_INITIALIZED","partialCall","partialAction","partialState","method","assign","pick","keyWithoutEnding","hasPrevious","currentReducer","wrapReducer","extend","componentArray","wordEnding","keyReplaceString","newObject","keyWithoutEnhancer","v","k","withEnhancedContainers","withEnhancedComponents","withWrappedComponents"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _flowRight2 = require('lodash/flowRight');\n\nvar _flowRight3 = _interopRequireDefault(_flowRight2);\n\nvar _flow2 = require('lodash/flow');\n\nvar _flow3 = _interopRequireDefault(_flow2);\n\nvar _pickBy2 = require('lodash/pickBy');\n\nvar _pickBy3 = _interopRequireDefault(_pickBy2);\n\nvar _flattenDeep2 = require('lodash/flattenDeep');\n\nvar _flattenDeep3 = _interopRequireDefault(_flattenDeep2);\n\nvar _uniq2 = require('lodash/uniq');\n\nvar _uniq3 = _interopRequireDefault(_uniq2);\n\nvar _pick2 = require('lodash/pick');\n\nvar _pick3 = _interopRequireDefault(_pick2);\n\nvar _extend2 = require('lodash/extend');\n\nvar _extend3 = _interopRequireDefault(_extend2);\n\nexports.extendArray = extendArray;\nexports.combineHandlers = combineHandlers;\nexports.getPropertiesByEnding = getPropertiesByEnding;\nexports.getObjectWherePropertyEndsWith = getObjectWherePropertyEndsWith;\nexports.composeReducer = composeReducer;\nexports.composeReducers = composeReducers;\nexports.getKeysForObjects = getKeysForObjects;\nexports.isKeyGriddleHook = isKeyGriddleHook;\nexports.removeHooksFromObject = removeHooksFromObject;\nexports.removeKeyNamePartFromObject = removeKeyNamePartFromObject;\nexports.getBeforeHooksFromObject = getBeforeHooksFromObject;\nexports.getBeforeReduceHooksFromObject = getBeforeReduceHooksFromObject;\nexports.getAfterHooksFromObject = getAfterHooksFromObject;\nexports.getAfterReduceHooksFromObject = getAfterReduceHooksFromObject;\nexports.composeReducerObjects = composeReducerObjects;\nexports.callReducerWithBeforeAfterPipe = callReducerWithBeforeAfterPipe;\nexports.buildGriddleReducer = buildGriddleReducer;\nexports.getReducersByWordEnding = getReducersByWordEnding;\nexports.wrapMethodsByWordEnding = wrapMethodsByWordEnding;\nexports.combineAndEnhanceComponents = combineAndEnhanceComponents;\nexports.combineAndEnhanceContainers = combineAndEnhanceContainers;\nexports.combineAndWrapWithContainerComponents = combineAndWrapWithContainerComponents;\nexports.buildGriddleComponents = buildGriddleComponents;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Extends an array rather than known list of objects */\n//TODO: Look at using object.assign\nfunction extendArray(objects) {\n  //return an empty object if we don't have anything to combine\n  if (!objects) {\n    return {};\n  }\n\n  //add empty object to the beginning for Object.extend\n  objects.unshift({});\n\n  //Buid the combined object\n  var combinedObject = _extend3.default.apply(this, objects);\n\n  //TODO: why are we doing this? is it necessary\n  objects.shift();\n\n  //return the combined object\n  return combinedObject;\n}\n\nfunction combineHandlers(functionArray) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    functionArray.forEach(function (func) {\n      return !!func && func.apply(undefined, args);\n    });\n  };\n}\n\n//from MDN\nif (!String.prototype.endsWith) {\n  String.prototype.endsWith = function (searchString, position) {\n    var subjectString = this.toString();\n    if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\n      position = subjectString.length;\n    }\n    position -= searchString.length;\n    var lastIndex = subjectString.indexOf(searchString, position);\n    return lastIndex !== -1 && lastIndex === position;\n  };\n}\n\n/**\n * Finds properties on an object that end in specified word\n * @param {string} ending - The string that properties should be found ending with\n * @param {Object} object - The object to find keys on\n */\nfunction getPropertiesByEnding(ending, object) {\n  return Object.keys(object).filter(function (name) {\n    return name.endsWith(ending);\n  });\n}\n\n/** Creates a new object containing only properties that end with specified ending\n * @param {string} ending - The string that properties should be found ending with\n * @param {Object} object - The object to find keys on\n */\nfunction getObjectWherePropertyEndsWith(ending, object) {\n  var keys = getPropertiesByEnding(ending, object);\n\n  return (0, _pick3.default)(object, keys);\n}\n\n/** Creates a new reducer by taking the output of the first reducer as state to the second\n * @param {Object} currentReducer - reducerMethod (state, action) to that we want to run as the state parameter for second reducer\n * @param {Object} previousReducer - reducerMethod (state, action) to run second\n */\nfunction composeReducer(nextReducer, previousReducer) {\n  // compose the reducers when both parameters are functions\n  if (typeof nextReducer === 'function' && typeof previousReducer === 'function') {\n    return function (state, action) {\n      return previousReducer(nextReducer(state, action), action);\n    };\n  }\n\n  // return the nextReducer\n  return nextReducer;\n}\n\n/** Creates a composed reducer method from an array of reducer methods\n * @param {Object <array>} reducers - An array of reducer methods to compose\n */\nfunction composeReducers(reducers) {\n  // flip the array (since we want to apply from left-to-right and compose each reducer\n  return reducers.reverse().reduce(function (previous, next) {\n    return composeReducer(next, previous);\n  }, {});\n}\n\n/** Obtains all the unique keys between an array of objects\n * @param {Object <array>} objects - An array of objects\n */\nfunction getKeysForObjects(objects) {\n  return (0, _uniq3.default)((0, _flattenDeep3.default)(objects.map(function (o) {\n    return Object.keys(o);\n  })));\n}\n\n/** Determines if a given key is a Griddle hook reducer\n * @param {string} key - the key to check if it refers to a Griddle hook\n */\nfunction isKeyGriddleHook(key) {\n  return key === 'BEFORE_REDUCE' || key === 'AFTER_REDUCE' || key.endsWith('AFTER') || key.endsWith('BEFORE');\n}\n\n/** Removes Griddle hooks from a reducer object\n * @param {Object} reducerObject - The reducer object to remove hooks from\n */\nfunction removeHooksFromObject(reducerObject) {\n  return (0, _pickBy3.default)(reducerObject, function (value, key) {\n    if (isKeyGriddleHook(key)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\n/** Removes a given string from any key on the object that contains that string\n * @param {Object} reducer object - the reducer object to update keys on\n * @param {string} keyString - the string to remove from all keys\n*/\nfunction removeKeyNamePartFromObject(reducerObject, keyString) {\n  return Object.keys(reducerObject).reduce(function (previous, current) {\n    previous[current.replace(keyString, '')] = reducerObject[current];\n    return previous;\n  }, {});\n}\n\n/** Gets an object that consists of only the _BEFORE hooks. _BEFORE will be removed from the key.\n * @param {Object} reducerObject - the reducer to get the _BEFORE hooks from\n */\nfunction getBeforeHooksFromObject(reducerObject) {\n  return removeKeyNamePartFromObject((0, _pickBy3.default)(reducerObject, function (value, key) {\n    return key.endsWith('BEFORE');\n  }), '_BEFORE');\n}\n\n/** Gets an object that consists of only the BEFORE_REDUCE hooks.\n * @param {Object} reducerObject - the reducer to get the BEFORE_REDUCE hooks from\n */\nfunction getBeforeReduceHooksFromObject(reducerObject) {\n  return (0, _pickBy3.default)(reducerObject, function (value, key) {\n    return key === 'BEFORE_REDUCE';\n  });\n}\n\n/** Gets an object that conists of only the _AFTER hooks. _AFTER will be removed from the key\n * @param {Object} reducerObject - the reducer to get the _AFTER hooks from\n */\nfunction getAfterHooksFromObject(reducerObject) {\n  return removeKeyNamePartFromObject((0, _pickBy3.default)(reducerObject, function (value, key) {\n    return key.endsWith('AFTER');\n  }), '_AFTER');\n}\n\n/** Gets an object that conists of only the AFTER_REDUCE hooks.\n * @param {Object} reducerObject - the reducer to get the AFTER_REDUCE hooks from\n */\nfunction getAfterReduceHooksFromObject(reducerObject) {\n  return (0, _pickBy3.default)(reducerObject, function (value, key) {\n    return key === 'AFTER_REDUCE';\n  });\n}\n\n/** Combines the given reducer objects left to right\n * @param {Object <array>} reducerObjects - An array containing objects consisting of reducer methods as properties\n */\nfunction composeReducerObjects(reducerObjects) {\n  if (reducerObjects.length < 1) return null;\n\n  return reducerObjects.reverse().reduce(function (previous, next) {\n    // if we don't have any reducers in previous object continue with next\n    if (previous === null) {\n      return next;\n    }\n\n    //mutate the previous object by composing the reducer methods\n    for (var key in next) {\n      previous[key] = composeReducer(next[key], previous[key]);\n    }\n\n    return previous;\n  }, null);\n}\n\n/** Builds a new reducer that composes hooks and extends standard reducers between reducerObjects\n * @param {Object <array>} reducers - An array of reducerObjects\n * Note: this used to be exported, but the same properties are available from buildGriddleReducer.\n * TODO: This method should be broken down a bit -- it's doing too much currently\n */\nfunction buildGriddleReducerObject(reducerObjects) {\n  var reducerMethodsWithoutHooks = [];\n  var beforeHooks = [];\n  var afterHooks = [];\n\n  var beforeReduceAll = [];\n  var afterReduceAll = [];\n\n  if (reducerObjects.length > 0) {\n    // remove the hooks and extend the object\n    for (var key in reducerObjects) {\n      var reducer = reducerObjects[key];\n      reducerMethodsWithoutHooks.push(removeHooksFromObject(reducer));\n      beforeHooks.push(getBeforeHooksFromObject(reducer));\n      afterHooks.push(getAfterHooksFromObject(reducer));\n      beforeReduceAll.push(getBeforeReduceHooksFromObject(reducer));\n      afterReduceAll.push(getAfterReduceHooksFromObject(reducer));\n    }\n  }\n\n  var composedBeforeHooks = composeReducerObjects(beforeHooks);\n  var composedAfterHooks = composeReducerObjects(afterHooks);\n\n  var composedBeforeReduceAll = composeReducerObjects(beforeReduceAll);\n  var composedAfterReduceAll = composeReducerObjects(afterReduceAll);\n\n  // combine the reducers without hooks\n  var combinedReducer = extendArray(reducerMethodsWithoutHooks);\n\n  var composed = composeReducerObjects([composedBeforeReduceAll, composedBeforeHooks, combinedReducer, composedAfterHooks, composedAfterReduceAll]);\n\n  return composed;\n}\n\n/** Builds a composed method containing the before / after reduce calls\n * @param {Object} reduceObject - The reducer that contains the composed reducer methods\n * @param {Object} state - The store state\n * @param {object} action - The action payload information\n*/\nfunction callReducerWithBeforeAfterPipe(reducerObject, state, action) {\n  var noop = function noop(passThroughState) {\n    return passThroughState;\n  };\n  var before = reducerObject.hasOwnProperty('BEFORE_REDUCE') ? reducerObject.BEFORE_REDUCE : noop;\n  var after = reducerObject.hasOwnProperty('AFTER_REDUCE') ? reducerObject.AFTER_REDUCE : noop;\n\n  var call = action.type && reducerObject[action.type] && reducerObject[action.type] || reducerObject.GRIDDLE_INITIALIZED || noop;\n\n  var partialCall = function (partialAction) {\n    return function (partialState) {\n      return call(partialState, partialAction);\n    };\n  }(action);\n\n  var method = (0, _flow3.default)([before, partialCall, after]);\n\n  return method(state);\n}\n\n/** Builds a griddleReducer function from a series of reducerObjects\n * @param {Object <array>} reducers - An array of reducerObjects\n*/\nfunction buildGriddleReducer(reducerObjects) {\n  var reducerObject = buildGriddleReducerObject(reducerObjects);\n  var reducer = function reducer(state, action) {\n    return callReducerWithBeforeAfterPipe(reducerObject, state, action);\n  };\n  Object.assign(reducer, reducerObject);\n  return reducer;\n}\n\n/** Gets all reducers by a specific wordEnding\n * @param {array <Object>} reducers - An array of reducer objects\n * @param {string} ending - the wordEnding for the reducer name\n */\nfunction getReducersByWordEnding(reducers, ending) {\n  return reducers.reduce(function (previous, current) {\n    var keys = Object.keys(current).filter(function (name) {\n      return name.endsWith(ending);\n    });\n\n    var reducer = pick(current, keys);\n\n    //TODO: clean this up it's a bit hacky\n    for (var key in current) {\n      if (!key.endsWith(ending)) {\n        continue;\n      }\n\n      var keyWithoutEnding = key.replace('_' + ending, \"\");\n      //make a new method that pipes output of previous into state of current\n      //this is to allow chaining these\n      var hasPrevious = previous.hasOwnProperty(keyWithoutEnding) && typeof previous[keyWithoutEnding] === 'function';\n      var previousReducer = hasPrevious ? previous[keyWithoutEnding] : undefined;\n\n      var currentReducer = reducer[key];\n\n      reducer[keyWithoutEnding] = wrapReducer(currentReducer, previousReducer);\n    }\n\n    //override anything in previous (since this now calls previous to make sure we have helpers from both);\n    return extend(previous, reducer);\n  }, {});\n}\n\n/** Wraps all methods in another method by name and word ending\n  * @param {array<Object>} componentObjectArray - An array of component objects\n  * @param {string} ending - the word ending to determine what is a enhancer method\n  * @param {string} keyReplaceString - the word ending to apply when replacing the 'ending' parameter. Defaults to ''\n*/\nfunction wrapMethodsByWordEnding(componentArray, wordEnding) {\n  var keyReplaceString = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  return componentArray.reduce(function (previous, current) {\n    var newObject = {};\n\n    for (var key in current) {\n      var keyWithoutEnhancer = key.replace(wordEnding, keyReplaceString);\n\n      if (key.endsWith(wordEnding) && (previous.hasOwnProperty(keyWithoutEnhancer) || current.hasOwnProperty(keyWithoutEnhancer))) {\n        // Determine if we are working with an HoC that wraps another HoC\n        newObject[keyWithoutEnhancer] = keyWithoutEnhancer.endsWith('Container') || keyWithoutEnhancer.endsWith('Enhancer') ?\n        // If we are enhancing a container or enhancer flow this stuff since it's likely an HoC\n        (0, _flowRight3.default)(current[key], current[keyWithoutEnhancer] || previous[keyWithoutEnhancer]) :\n        // Wrap the current component in the Enhancer or container\n        current[key](current[keyWithoutEnhancer] || previous[keyWithoutEnhancer]);\n      }\n    }\n\n    return (0, _pickBy3.default)(Object.assign(previous, current, newObject), function (v, k) {\n      return !k.endsWith(wordEnding);\n    });\n  }, {});\n}\n\n/** Gets a new components object with component per component name\n * @param {array<Object>} componentObjectArray - An array of component objects\n*/\nfunction combineAndEnhanceComponents(componentArray) {\n  return wrapMethodsByWordEnding(componentArray, 'Enhancer');\n}\n\nfunction combineAndEnhanceContainers(componentArray) {\n  return wrapMethodsByWordEnding(componentArray, 'ContainerEnhancer', 'Container');\n}\n\n/** Gets a new component object with containers wrapping standard components\n  (this is the same as enhance but just applying different naming conventions)\n * @param {array<Object>} componentObjectArray - An array of component objects\n*/\nfunction combineAndWrapWithContainerComponents(componentArray) {\n  return wrapMethodsByWordEnding(componentArray, 'Container');\n}\n\n/** Wraps components in their containers and enhancers\n * @param {array<Object>} componentObjectArray - An array of component objects\n*/\nfunction buildGriddleComponents(componentArray) {\n  //enhance the containers\n  var withEnhancedContainers = combineAndEnhanceContainers(componentArray);\n\n  //enhance the components\n  var withEnhancedComponents = combineAndEnhanceComponents([withEnhancedContainers]);\n\n  //wrap the components with the container\n  var withWrappedComponents = combineAndWrapWithContainerComponents([withEnhancedComponents]);\n\n  return withWrappedComponents;\n}"]},"metadata":{},"sourceType":"script"}