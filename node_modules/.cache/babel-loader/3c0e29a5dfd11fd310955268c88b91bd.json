{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shree\\\\Desktop\\\\task-master\\\\src\\\\components\\\\Navbar\\\\DemoLoader.js\";\nimport React, { useReducer } from \"react\";\nconst allData = new Array(25).fill(0).map((_val, i) => i + 1);\nconst perPage = 10;\nconst types = {\n  start: \"START\",\n  loaded: \"LOADED\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case types.start:\n      return { ...state,\n        loading: true\n      };\n\n    case types.loaded:\n      return { ...state,\n        loading: false,\n        data: [...state.data, ...action.newData],\n        more: action.newData.length === perPage,\n        after: state.after + action.newData.length\n      };\n\n    default:\n      throw new Error(\"Don't understand action\");\n  }\n};\n\nconst MyContext = React.createContext();\n\nfunction MyProvider({\n  children\n}) {\n  const [state, dispatch] = React.useReducer(reducer, {\n    loading: false,\n    more: true,\n    data: [],\n    after: 0\n  });\n  const {\n    loading,\n    data,\n    after,\n    more\n  } = state;\n\n  const load = () => {\n    dispatch({\n      type: types.start\n    });\n    setTimeout(() => {\n      const newData = allData.slice(after, after + perPage);\n      dispatch({\n        type: types.loaded,\n        newData\n      });\n    }, 300);\n  };\n\n  return /*#__PURE__*/React.createElement(MyContext.Provider, {\n    value: {\n      loading,\n      data,\n      more,\n      load\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nfunction DemoLoader() {\n  const {\n    data,\n    loading,\n    more,\n    load\n  } = React.useContext(MyContext);\n  const loader = React.useRef(load);\n  const observer = React.useRef(new IntersectionObserver(entries => {\n    const first = entries[0];\n\n    if (first.isIntersecting) {\n      loader.current();\n    }\n  }, {\n    threshold: 1\n  }));\n  const [element, setElement] = React.useState(null);\n  React.useEffect(() => {\n    loader.current = load;\n  }, [load]);\n  React.useEffect(() => {\n    const currentElement = element;\n    const currentObserver = observer.current;\n\n    if (currentElement) {\n      currentObserver.observe(currentElement);\n    }\n\n    return () => {\n      if (currentElement) {\n        currentObserver.unobserve(currentElement);\n      }\n    };\n  }, [element]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, data.map(row => /*#__PURE__*/React.createElement(\"li\", {\n    key: row,\n    style: {\n      background: \"orange\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, row)), loading && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Loading...\"), !loading && more && /*#__PURE__*/React.createElement(\"li\", {\n    ref: setElement,\n    style: {\n      background: \"transparent\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default DemoLoader;","map":{"version":3,"sources":["C:/Users/shree/Desktop/task-master/src/components/Navbar/DemoLoader.js"],"names":["React","useReducer","allData","Array","fill","map","_val","i","perPage","types","start","loaded","reducer","state","action","type","loading","data","newData","more","length","after","Error","MyContext","createContext","MyProvider","children","dispatch","load","setTimeout","slice","DemoLoader","useContext","loader","useRef","observer","IntersectionObserver","entries","first","isIntersecting","current","threshold","element","setElement","useState","useEffect","currentElement","currentObserver","observe","unobserve","row","background"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AAEA,MAAMC,OAAO,GAAG,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,EAAsBC,GAAtB,CAA0B,CAACC,IAAD,EAAOC,CAAP,KAAaA,CAAC,GAAG,CAA3C,CAAhB;AACA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,OADK;AAEZC,EAAAA,MAAM,EAAE;AAFI,CAAd;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAK,CAACC,KAAX;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYG,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKP,KAAK,CAACE,MAAX;AACE,aAAO,EACL,GAAGE,KADE;AAELG,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,IAAI,EAAE,CAAC,GAAGJ,KAAK,CAACI,IAAV,EAAgB,GAAGH,MAAM,CAACI,OAA1B,CAHD;AAILC,QAAAA,IAAI,EAAEL,MAAM,CAACI,OAAP,CAAeE,MAAf,KAA0BZ,OAJ3B;AAKLa,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,GAAcP,MAAM,CAACI,OAAP,CAAeE;AAL/B,OAAP;;AAOF;AACE,YAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AAZJ;AAcD,CAfD;;AAiBA,MAAMC,SAAS,GAAGvB,KAAK,CAACwB,aAAN,EAAlB;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAkC;AAChC,QAAM,CAACb,KAAD,EAAQc,QAAR,IAAoB3B,KAAK,CAACC,UAAN,CAAiBW,OAAjB,EAA0B;AAClDI,IAAAA,OAAO,EAAE,KADyC;AAElDG,IAAAA,IAAI,EAAE,IAF4C;AAGlDF,IAAAA,IAAI,EAAE,EAH4C;AAIlDI,IAAAA,KAAK,EAAE;AAJ2C,GAA1B,CAA1B;AAMA,QAAM;AAAEL,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBI,IAAAA,KAAjB;AAAwBF,IAAAA;AAAxB,MAAiCN,KAAvC;;AAEA,QAAMe,IAAI,GAAG,MAAM;AACjBD,IAAAA,QAAQ,CAAC;AAAEZ,MAAAA,IAAI,EAAEN,KAAK,CAACC;AAAd,KAAD,CAAR;AAEAmB,IAAAA,UAAU,CAAC,MAAM;AACf,YAAMX,OAAO,GAAGhB,OAAO,CAAC4B,KAAR,CAAcT,KAAd,EAAqBA,KAAK,GAAGb,OAA7B,CAAhB;AACAmB,MAAAA,QAAQ,CAAC;AAAEZ,QAAAA,IAAI,EAAEN,KAAK,CAACE,MAAd;AAAsBO,QAAAA;AAAtB,OAAD,CAAR;AACD,KAHS,EAGP,GAHO,CAAV;AAID,GAPD;;AASA,sBACE,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AAAEF,MAAAA,OAAF;AAAWC,MAAAA,IAAX;AAAiBE,MAAAA,IAAjB;AAAuBS,MAAAA;AAAvB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF;AAKD;;AAED,SAASK,UAAT,GAAsB;AACpB,QAAM;AAAEd,IAAAA,IAAF;AAAQD,IAAAA,OAAR;AAAiBG,IAAAA,IAAjB;AAAuBS,IAAAA;AAAvB,MAAgC5B,KAAK,CAACgC,UAAN,CAAiBT,SAAjB,CAAtC;AACA,QAAMU,MAAM,GAAGjC,KAAK,CAACkC,MAAN,CAAaN,IAAb,CAAf;AACA,QAAMO,QAAQ,GAAGnC,KAAK,CAACkC,MAAN,CACf,IAAIE,oBAAJ,CACEC,OAAO,IAAI;AACT,UAAMC,KAAK,GAAGD,OAAO,CAAC,CAAD,CAArB;;AACA,QAAIC,KAAK,CAACC,cAAV,EAA0B;AACxBN,MAAAA,MAAM,CAACO,OAAP;AACD;AACF,GANH,EAOE;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAPF,CADe,CAAjB;AAWA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB3C,KAAK,CAAC4C,QAAN,CAAe,IAAf,CAA9B;AAEA5C,EAAAA,KAAK,CAAC6C,SAAN,CAAgB,MAAM;AACpBZ,IAAAA,MAAM,CAACO,OAAP,GAAiBZ,IAAjB;AACD,GAFD,EAEG,CAACA,IAAD,CAFH;AAIA5B,EAAAA,KAAK,CAAC6C,SAAN,CAAgB,MAAM;AACpB,UAAMC,cAAc,GAAGJ,OAAvB;AACA,UAAMK,eAAe,GAAGZ,QAAQ,CAACK,OAAjC;;AAEA,QAAIM,cAAJ,EAAoB;AAClBC,MAAAA,eAAe,CAACC,OAAhB,CAAwBF,cAAxB;AACD;;AAED,WAAO,MAAM;AACX,UAAIA,cAAJ,EAAoB;AAClBC,QAAAA,eAAe,CAACE,SAAhB,CAA0BH,cAA1B;AACD;AACF,KAJD;AAKD,GAbD,EAaG,CAACJ,OAAD,CAbH;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,IAAI,CAACZ,GAAL,CAAS6C,GAAG,iBACX;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAc,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,GADH,CADD,CADH,EAOGlC,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPd,EASG,CAACA,OAAD,IAAYG,IAAZ,iBACC;AAAI,IAAA,GAAG,EAAEwB,UAAT;AAAqB,IAAA,KAAK,EAAE;AAAEQ,MAAAA,UAAU,EAAE;AAAd,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF,CADF;AAiBD;;AAED,eAAepB,UAAf","sourcesContent":["import React,{useReducer} from \"react\";\r\n\r\nconst allData = new Array(25).fill(0).map((_val, i) => i + 1);\r\nconst perPage = 10;\r\nconst types = {\r\n  start: \"START\",\r\n  loaded: \"LOADED\"\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case types.start:\r\n      return { ...state, loading: true };\r\n    case types.loaded:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: [...state.data, ...action.newData],\r\n        more: action.newData.length === perPage,\r\n        after: state.after + action.newData.length\r\n      };\r\n    default:\r\n      throw new Error(\"Don't understand action\");\r\n  }\r\n};\r\n\r\nconst MyContext = React.createContext();\r\n\r\nfunction MyProvider({ children }) {\r\n  const [state, dispatch] = React.useReducer(reducer, {\r\n    loading: false,\r\n    more: true,\r\n    data: [],\r\n    after: 0\r\n  });\r\n  const { loading, data, after, more } = state;\r\n\r\n  const load = () => {\r\n    dispatch({ type: types.start });\r\n\r\n    setTimeout(() => {\r\n      const newData = allData.slice(after, after + perPage);\r\n      dispatch({ type: types.loaded, newData });\r\n    }, 300);\r\n  };\r\n\r\n  return (\r\n    <MyContext.Provider value={{ loading, data, more, load }}>\r\n      {children}\r\n    </MyContext.Provider>\r\n  );\r\n}\r\n\r\nfunction DemoLoader() {\r\n  const { data, loading, more, load } = React.useContext(MyContext);\r\n  const loader = React.useRef(load);\r\n  const observer = React.useRef(\r\n    new IntersectionObserver(\r\n      entries => {\r\n        const first = entries[0];\r\n        if (first.isIntersecting) {\r\n          loader.current();\r\n        }\r\n      },\r\n      { threshold: 1 }\r\n    )\r\n  );\r\n  const [element, setElement] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    loader.current = load;\r\n  }, [load]);\r\n\r\n  React.useEffect(() => {\r\n    const currentElement = element;\r\n    const currentObserver = observer.current;\r\n\r\n    if (currentElement) {\r\n      currentObserver.observe(currentElement);\r\n    }\r\n\r\n    return () => {\r\n      if (currentElement) {\r\n        currentObserver.unobserve(currentElement);\r\n      }\r\n    };\r\n  }, [element]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ul>\r\n        {data.map(row => (\r\n          <li key={row} style={{ background: \"orange\" }}>\r\n            {row}\r\n          </li>\r\n        ))}\r\n\r\n        {loading && <li>Loading...</li>}\r\n\r\n        {!loading && more && (\r\n          <li ref={setElement} style={{ background: \"transparent\" }}></li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DemoLoader"]},"metadata":{},"sourceType":"module"}