{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.getColumnProperties = getColumnProperties;\nvar offset = 1000;\n/** Gets a column properties object from an array of columnNames\n * @param {Array<string>} columns - array of column names\n */\n\nfunction getColumnPropertiesFromColumnArray(columnProperties, columns) {\n  return columns.reduce(function (previous, current, i) {\n    previous[current] = {\n      id: current,\n      order: offset + i\n    };\n    return previous;\n  }, columnProperties);\n}\n/** Gets the column properties object from a react component (rowProperties) that contains child component(s) for columnProperties.\n *    If no properties are found, it will work return a column properties object based on the all columns array\n * @param {Object} rowProperties - An React component that contains the rowProperties and child columnProperties components\n * @param {Array<string> optional} allColumns - An optional array of colummn names. This will be used to generate the columnProperties when they are not defined in rowProperties\n */\n\n\nfunction getColumnProperties(rowProperties) {\n  var allColumns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var children = rowProperties && rowProperties.props && rowProperties.props.children;\n  var columnProperties = {}; // Working against an array of columnProperties\n\n  if (Array.isArray(children)) {\n    // build one object that contains all of the column properties keyed by id\n    children.reduce(function (previous, current, i) {\n      if (current) {\n        previous[current.props.id] = _extends({\n          order: offset + i\n        }, current.props);\n      }\n\n      return previous;\n    }, columnProperties); // Working against a lone, columnProperties object\n  } else if (children && children.props) {\n    columnProperties[children.props.id] = _extends({\n      order: offset\n    }, children.props);\n  }\n\n  if (Object.keys(columnProperties).length === 0 && allColumns) {\n    getColumnPropertiesFromColumnArray(columnProperties, allColumns);\n  }\n\n  return columnProperties;\n}","map":{"version":3,"sources":["C:/Users/shree/Desktop/smarte/node_modules/griddle-react/dist/module/utils/columnUtils.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","getColumnProperties","offset","getColumnPropertiesFromColumnArray","columnProperties","columns","reduce","previous","current","id","order","rowProperties","allColumns","undefined","children","props","Array","isArray","keys"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGJ,MAAM,CAACK,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIV,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEAJ,OAAO,CAACa,mBAAR,GAA8BA,mBAA9B;AACA,IAAIC,MAAM,GAAG,IAAb;AAEA;;;;AAGA,SAASC,kCAAT,CAA4CC,gBAA5C,EAA8DC,OAA9D,EAAuE;AACrE,SAAOA,OAAO,CAACC,MAAR,CAAe,UAAUC,QAAV,EAAoBC,OAApB,EAA6Bf,CAA7B,EAAgC;AACpDc,IAAAA,QAAQ,CAACC,OAAD,CAAR,GAAoB;AAAEC,MAAAA,EAAE,EAAED,OAAN;AAAeE,MAAAA,KAAK,EAAER,MAAM,GAAGT;AAA/B,KAApB;AACA,WAAOc,QAAP;AACD,GAHM,EAGJH,gBAHI,CAAP;AAID;AAED;;;;;;;AAKA,SAASH,mBAAT,CAA6BU,aAA7B,EAA4C;AAC1C,MAAIC,UAAU,GAAGlB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBmB,SAAzC,GAAqDnB,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAArF;AAEA,MAAIoB,QAAQ,GAAGH,aAAa,IAAIA,aAAa,CAACI,KAA/B,IAAwCJ,aAAa,CAACI,KAAd,CAAoBD,QAA3E;AACA,MAAIV,gBAAgB,GAAG,EAAvB,CAJ0C,CAM1C;;AACA,MAAIY,KAAK,CAACC,OAAN,CAAcH,QAAd,CAAJ,EAA6B;AAC3B;AACAA,IAAAA,QAAQ,CAACR,MAAT,CAAgB,UAAUC,QAAV,EAAoBC,OAApB,EAA6Bf,CAA7B,EAAgC;AAC9C,UAAIe,OAAJ,EAAa;AACXD,QAAAA,QAAQ,CAACC,OAAO,CAACO,KAAR,CAAcN,EAAf,CAAR,GAA6BnB,QAAQ,CAAC;AAAEoB,UAAAA,KAAK,EAAER,MAAM,GAAGT;AAAlB,SAAD,EAAwBe,OAAO,CAACO,KAAhC,CAArC;AACD;;AACD,aAAOR,QAAP;AACD,KALD,EAKGH,gBALH,EAF2B,CAS3B;AACD,GAVD,MAUO,IAAIU,QAAQ,IAAIA,QAAQ,CAACC,KAAzB,EAAgC;AACrCX,IAAAA,gBAAgB,CAACU,QAAQ,CAACC,KAAT,CAAeN,EAAhB,CAAhB,GAAsCnB,QAAQ,CAAC;AAAEoB,MAAAA,KAAK,EAAER;AAAT,KAAD,EAAoBY,QAAQ,CAACC,KAA7B,CAA9C;AACD;;AAED,MAAI7B,MAAM,CAACgC,IAAP,CAAYd,gBAAZ,EAA8BT,MAA9B,KAAyC,CAAzC,IAA8CiB,UAAlD,EAA8D;AAC5DT,IAAAA,kCAAkC,CAACC,gBAAD,EAAmBQ,UAAnB,CAAlC;AACD;;AAED,SAAOR,gBAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.getColumnProperties = getColumnProperties;\nvar offset = 1000;\n\n/** Gets a column properties object from an array of columnNames\n * @param {Array<string>} columns - array of column names\n */\nfunction getColumnPropertiesFromColumnArray(columnProperties, columns) {\n  return columns.reduce(function (previous, current, i) {\n    previous[current] = { id: current, order: offset + i };\n    return previous;\n  }, columnProperties);\n}\n\n/** Gets the column properties object from a react component (rowProperties) that contains child component(s) for columnProperties.\n *    If no properties are found, it will work return a column properties object based on the all columns array\n * @param {Object} rowProperties - An React component that contains the rowProperties and child columnProperties components\n * @param {Array<string> optional} allColumns - An optional array of colummn names. This will be used to generate the columnProperties when they are not defined in rowProperties\n */\nfunction getColumnProperties(rowProperties) {\n  var allColumns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var children = rowProperties && rowProperties.props && rowProperties.props.children;\n  var columnProperties = {};\n\n  // Working against an array of columnProperties\n  if (Array.isArray(children)) {\n    // build one object that contains all of the column properties keyed by id\n    children.reduce(function (previous, current, i) {\n      if (current) {\n        previous[current.props.id] = _extends({ order: offset + i }, current.props);\n      }\n      return previous;\n    }, columnProperties);\n\n    // Working against a lone, columnProperties object\n  } else if (children && children.props) {\n    columnProperties[children.props.id] = _extends({ order: offset }, children.props);\n  }\n\n  if (Object.keys(columnProperties).length === 0 && allColumns) {\n    getColumnPropertiesFromColumnArray(columnProperties, allColumns);\n  }\n\n  return columnProperties;\n}"]},"metadata":{},"sourceType":"script"}