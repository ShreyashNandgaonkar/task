{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar StoreListener = exports.StoreListener = function StoreListener(store) {\n  var _this = this;\n\n  _classCallCheck(this, StoreListener);\n\n  this.removeListener = function (name) {\n    if (_this.unsubscribers.hasOwnProperty(name)) {\n      _this.unsubscribers[name]();\n\n      delete _this.unsubscribers[name];\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.addListener = function (listener, name, otherArgs) {\n    // attempt to unsubscribe an existing listener if the new \n    // listener name matches\n    // if no name is provided, do nothing\n    name && _this.removeListener(name);\n\n    var unsubscribe = function () {\n      var oldState = void 0;\n      return _this.store.subscribe(function () {\n        var newState = _this.store.getState();\n\n        listener(oldState, newState, _extends({}, otherArgs));\n        oldState = newState;\n      });\n    }(); // if name was provided, add the unsubscribe\n    // otherwise this is an \"anonymous\" listener\n\n\n    name && (_this.unsubscribers[name] = unsubscribe);\n    return unsubscribe;\n  };\n\n  this.hasListener = function (name) {\n    return _this.unsubscribers.hasOwnProperty(name);\n  };\n\n  this.store = store;\n  this.unsubscribers = {};\n} // Adds a listener to the store.\n// Will attempt to remove an existing listener if the name\n// matches that of an existing listener.\n// If no name is provided this is an anonymous lister, it\n// is not registered in the list of unsubscribe functions,\n// returns the unsubscribe function so it can still be handled\n// manually if desired.\n;","map":{"version":3,"sources":["C:/Users/shree/Desktop/smarte/node_modules/griddle-react/dist/module/utils/listenerUtils.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","StoreListener","store","_this","removeListener","name","unsubscribers","addListener","listener","otherArgs","unsubscribe","oldState","subscribe","newState","getState","hasListener"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGJ,MAAM,CAACK,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIV,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEA,SAASS,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,IAAIC,aAAa,GAAGjB,OAAO,CAACiB,aAAR,GAAwB,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AACtE,MAAIC,KAAK,GAAG,IAAZ;;AAEAN,EAAAA,eAAe,CAAC,IAAD,EAAOI,aAAP,CAAf;;AAEA,OAAKG,cAAL,GAAsB,UAAUC,IAAV,EAAgB;AAClC,QAAIF,KAAK,CAACG,aAAN,CAAoBX,cAApB,CAAmCU,IAAnC,CAAJ,EAA8C;AAC1CF,MAAAA,KAAK,CAACG,aAAN,CAAoBD,IAApB;;AACA,aAAOF,KAAK,CAACG,aAAN,CAAoBD,IAApB,CAAP;AACA,aAAO,IAAP;AACH,KAJD,MAIO;AACH,aAAO,KAAP;AACH;AACJ,GARD;;AAUA,OAAKE,WAAL,GAAmB,UAAUC,QAAV,EAAoBH,IAApB,EAA0BI,SAA1B,EAAqC;AACpD;AACA;AACA;AACAJ,IAAAA,IAAI,IAAIF,KAAK,CAACC,cAAN,CAAqBC,IAArB,CAAR;;AACA,QAAIK,WAAW,GAAG,YAAY;AAC1B,UAAIC,QAAQ,GAAG,KAAK,CAApB;AACA,aAAOR,KAAK,CAACD,KAAN,CAAYU,SAAZ,CAAsB,YAAY;AACrC,YAAIC,QAAQ,GAAGV,KAAK,CAACD,KAAN,CAAYY,QAAZ,EAAf;;AACAN,QAAAA,QAAQ,CAACG,QAAD,EAAWE,QAAX,EAAqB3B,QAAQ,CAAC,EAAD,EAAKuB,SAAL,CAA7B,CAAR;AACAE,QAAAA,QAAQ,GAAGE,QAAX;AACH,OAJM,CAAP;AAKH,KAPiB,EAAlB,CALoD,CAapD;AACA;;;AACAR,IAAAA,IAAI,KAAKF,KAAK,CAACG,aAAN,CAAoBD,IAApB,IAA4BK,WAAjC,CAAJ;AACA,WAAOA,WAAP;AACH,GAjBD;;AAmBA,OAAKK,WAAL,GAAmB,UAAUV,IAAV,EAAgB;AAC/B,WAAOF,KAAK,CAACG,aAAN,CAAoBX,cAApB,CAAmCU,IAAnC,CAAP;AACH,GAFD;;AAIA,OAAKH,KAAL,GAAaA,KAAb;AACA,OAAKI,aAAL,GAAqB,EAArB;AACH,CAxCD,CA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AAhDA","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar StoreListener = exports.StoreListener = function StoreListener(store) {\n    var _this = this;\n\n    _classCallCheck(this, StoreListener);\n\n    this.removeListener = function (name) {\n        if (_this.unsubscribers.hasOwnProperty(name)) {\n            _this.unsubscribers[name]();\n            delete _this.unsubscribers[name];\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    this.addListener = function (listener, name, otherArgs) {\n        // attempt to unsubscribe an existing listener if the new \n        // listener name matches\n        // if no name is provided, do nothing\n        name && _this.removeListener(name);\n        var unsubscribe = function () {\n            var oldState = void 0;\n            return _this.store.subscribe(function () {\n                var newState = _this.store.getState();\n                listener(oldState, newState, _extends({}, otherArgs));\n                oldState = newState;\n            });\n        }();\n        // if name was provided, add the unsubscribe\n        // otherwise this is an \"anonymous\" listener\n        name && (_this.unsubscribers[name] = unsubscribe);\n        return unsubscribe;\n    };\n\n    this.hasListener = function (name) {\n        return _this.unsubscribers.hasOwnProperty(name);\n    };\n\n    this.store = store;\n    this.unsubscribers = {};\n}\n\n// Adds a listener to the store.\n// Will attempt to remove an existing listener if the name\n// matches that of an existing listener.\n// If no name is provided this is an anonymous lister, it\n// is not registered in the list of unsubscribe functions,\n// returns the unsubscribe function so it can still be handled\n// manually if desired.\n;"]},"metadata":{},"sourceType":"script"}