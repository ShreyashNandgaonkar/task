{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.getIncrementer = getIncrementer;\nexports.transformData = transformData;\nexports.getVisibleDataForColumns = getVisibleDataForColumns;\nexports.hasColumnProperties = hasColumnProperties;\nexports.hasData = hasData;\nexports.addColumnPropertiesWhenNoneExist = addColumnPropertiesWhenNoneExist;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} //From Immutable docs - https://github.com/facebook/immutable-js/wiki/Predicates\n\n\nfunction keyInArray(keys) {\n  var keySet = _immutable2.default.Set(keys);\n\n  return function (v, k) {\n    return keySet.has(k);\n  };\n}\n\nfunction getIncrementer(startIndex) {\n  var key = startIndex;\n  return function () {\n    return key++;\n  };\n}\n\nfunction isImmutableConvertibleValue(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' || value === null || value instanceof Date;\n} // From https://github.com/facebook/immutable-js/wiki/Converting-from-JS-objects#custom-conversion\n\n\nfunction fromJSGreedy(js) {\n  return isImmutableConvertibleValue(js) ? js : Array.isArray(js) ? _immutable2.default.Seq(js).map(fromJSGreedy).toList() : _immutable2.default.Seq(js).map(fromJSGreedy).toMap();\n}\n\nfunction transformData(data, renderProperties) {\n  if (!data) {\n    return {};\n  }\n\n  var hasCustomRowId = renderProperties.rowProperties && renderProperties.rowProperties.rowKey; // Validate that the first item in our data has the custom Griddle key\n\n  if (hasCustomRowId && data.length > 0 && !data[0].hasOwnProperty(renderProperties.rowProperties.rowKey)) {\n    throw new Error('Griddle: Property \\'' + renderProperties.rowProperties.rowKey + '\\' doesn\\'t exist in row data. Please specify a rowKey that exists in <RowDefinition>');\n  }\n\n  var list = [];\n  var lookup = {};\n  data.forEach(function (rowData, index) {\n    var map = fromJSGreedy(rowData); // if this has a row key use that -- otherwise use Griddle key\n\n    var key = hasCustomRowId ? rowData[renderProperties.rowProperties.rowKey] : index; // if our map object already has griddleKey use that -- otherwise add key as griddleKey\n\n    var keyedData = map.has('griddleKey') ? map : map.set('griddleKey', key);\n    list.push(keyedData);\n    lookup[key] = index;\n  });\n  return {\n    data: new _immutable2.default.List(list),\n    lookup: new _immutable2.default.Map(lookup)\n  };\n}\n/** Gets the visible data based on columns\n *  @param (List<Map>) data - data collection\n *  @param (array<string>) columns - list of columns to display\n *\n *  TODO: Needs tests\n */\n\n\nfunction getVisibleDataForColumns(data, columns) {\n  if (data.size < 1) {\n    return data;\n  }\n\n  var dataColumns = data.get(0).keySeq().toArray();\n  var metadataColumns = dataColumns.filter(function (item) {\n    return columns.indexOf(item) < 0;\n  }); //if columns are specified but aren't in the data\n  //make it up (as null). We will append this column\n  //to the resultant data\n\n  var magicColumns = columns.filter(function (item) {\n    return dataColumns.indexOf(item) < 0;\n  }).reduce(function (original, item) {\n    original[item] = null;\n    return original;\n  }, {}); //combine the metadata and the \"magic\" columns\n\n  var extra = data.map(function (d, i) {\n    return new _immutable2.default.Map(Object.assign(magicColumns));\n  });\n  var result = data.map(function (d) {\n    return d.filter(keyInArray(columns));\n  });\n  return result.mergeDeep(extra).map(function (item) {\n    return item.sortBy(function (val, key) {\n      return columns.indexOf(key) > -1 ? columns.indexOf(key) : MAX_SAFE_INTEGER;\n    });\n  });\n}\n/* TODO: Add documentation and tests for this whole section!*/\n\n/** Does this initial state object have column properties?\n * @param (object) stateObject - a non-immutable state object for initialization\n *\n * TODO: Needs tests\n */\n\n\nfunction hasColumnProperties(stateObject) {\n  return stateObject.hasOwnProperty('renderProperties') && stateObject.renderProperties.hasOwnProperty('columnProperties') && Object.keys(stateObject.renderProperties.columnProperties).length > 0;\n}\n/** Does this initial state object have data?\n * @param (object) stateObject - a non-immutable state object for initialization\n */\n\n\nfunction hasData(stateObject) {\n  return !!stateObject.data && stateObject.data.length > 0;\n}\n/** Gets a new state object (not immutable) that has columnProperties if none exist\n * @param (object) stateObject - a non-immutable state object for initialization\n *\n * TODO: Needs tests\n */\n\n\nfunction addColumnPropertiesWhenNoneExist(stateObject) {\n  if (!hasData(stateObject) || hasColumnProperties(stateObject)) {\n    return stateObject;\n  }\n\n  return _extends({}, stateObject, {\n    renderProperties: {\n      columnProperties: Object.keys(stateObject.data[0]).reduce(function (previous, current) {\n        previous[current] = {\n          id: current,\n          visible: true\n        };\n        return previous;\n      }, {})\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/shree/Desktop/smarte/node_modules/griddle-react/dist/module/utils/dataUtils.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_typeof","Symbol","iterator","obj","constructor","getIncrementer","transformData","getVisibleDataForColumns","hasColumnProperties","hasData","addColumnPropertiesWhenNoneExist","_immutable","require","_immutable2","_interopRequireDefault","__esModule","default","keyInArray","keys","keySet","Set","v","k","has","startIndex","isImmutableConvertibleValue","Date","fromJSGreedy","js","Array","isArray","Seq","map","toList","toMap","data","renderProperties","hasCustomRowId","rowProperties","rowKey","Error","list","lookup","forEach","rowData","index","keyedData","set","push","List","Map","columns","size","dataColumns","get","keySeq","toArray","metadataColumns","filter","item","indexOf","magicColumns","reduce","original","extra","d","result","mergeDeep","sortBy","val","MAX_SAFE_INTEGER","stateObject","columnProperties","previous","current","id","visible"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGJ,MAAM,CAACK,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIV,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEA,IAAIS,OAAO,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA3D,GAAsE,UAAUC,GAAV,EAAe;AAAE,SAAO,OAAOA,GAAd;AAAoB,CAA3G,GAA8G,UAAUA,GAAV,EAAe;AAAE,SAAOA,GAAG,IAAI,OAAOF,MAAP,KAAkB,UAAzB,IAAuCE,GAAG,CAACC,WAAJ,KAAoBH,MAA3D,IAAqEE,GAAG,KAAKF,MAAM,CAACJ,SAApF,GAAgG,QAAhG,GAA2G,OAAOM,GAAzH;AAA+H,CAA5Q;;AAEAhB,OAAO,CAACkB,cAAR,GAAyBA,cAAzB;AACAlB,OAAO,CAACmB,aAAR,GAAwBA,aAAxB;AACAnB,OAAO,CAACoB,wBAAR,GAAmCA,wBAAnC;AACApB,OAAO,CAACqB,mBAAR,GAA8BA,mBAA9B;AACArB,OAAO,CAACsB,OAAR,GAAkBA,OAAlB;AACAtB,OAAO,CAACuB,gCAAR,GAA2CA,gCAA3C;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACH,UAAD,CAAxC;;AAEA,SAASG,sBAAT,CAAgCX,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACY,UAAX,GAAwBZ,GAAxB,GAA8B;AAAEa,IAAAA,OAAO,EAAEb;AAAX,GAArC;AAAwD,C,CAE/F;;;AACA,SAASc,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAIC,MAAM,GAAGN,WAAW,CAACG,OAAZ,CAAoBI,GAApB,CAAwBF,IAAxB,CAAb;;AACA,SAAO,UAAUG,CAAV,EAAaC,CAAb,EAAgB;AAErB,WAAOH,MAAM,CAACI,GAAP,CAAWD,CAAX,CAAP;AACD,GAHD;AAID;;AAED,SAASjB,cAAT,CAAwBmB,UAAxB,EAAoC;AAClC,MAAI5B,GAAG,GAAG4B,UAAV;AACA,SAAO,YAAY;AACjB,WAAO5B,GAAG,EAAV;AACD,GAFD;AAGD;;AAED,SAAS6B,2BAAT,CAAqCrC,KAArC,EAA4C;AAC1C,SAAO,CAAC,OAAOA,KAAP,KAAiB,WAAjB,GAA+B,WAA/B,GAA6CY,OAAO,CAACZ,KAAD,CAArD,MAAkE,QAAlE,IAA8EA,KAAK,KAAK,IAAxF,IAAgGA,KAAK,YAAYsC,IAAxH;AACD,C,CAED;;;AACA,SAASC,YAAT,CAAsBC,EAAtB,EAA0B;AACxB,SAAOH,2BAA2B,CAACG,EAAD,CAA3B,GAAkCA,EAAlC,GAAuCC,KAAK,CAACC,OAAN,CAAcF,EAAd,IAAoBf,WAAW,CAACG,OAAZ,CAAoBe,GAApB,CAAwBH,EAAxB,EAA4BI,GAA5B,CAAgCL,YAAhC,EAA8CM,MAA9C,EAApB,GAA6EpB,WAAW,CAACG,OAAZ,CAAoBe,GAApB,CAAwBH,EAAxB,EAA4BI,GAA5B,CAAgCL,YAAhC,EAA8CO,KAA9C,EAA3H;AACD;;AAED,SAAS5B,aAAT,CAAuB6B,IAAvB,EAA6BC,gBAA7B,EAA+C;AAC7C,MAAI,CAACD,IAAL,EAAW;AACT,WAAO,EAAP;AACD;;AAED,MAAIE,cAAc,GAAGD,gBAAgB,CAACE,aAAjB,IAAkCF,gBAAgB,CAACE,aAAjB,CAA+BC,MAAtF,CAL6C,CAO7C;;AACA,MAAIF,cAAc,IAAIF,IAAI,CAACzC,MAAL,GAAc,CAAhC,IAAqC,CAACyC,IAAI,CAAC,CAAD,CAAJ,CAAQrC,cAAR,CAAuBsC,gBAAgB,CAACE,aAAjB,CAA+BC,MAAtD,CAA1C,EAAyG;AACvG,UAAM,IAAIC,KAAJ,CAAU,yBAAyBJ,gBAAgB,CAACE,aAAjB,CAA+BC,MAAxD,GAAiE,uFAA3E,CAAN;AACD;;AAED,MAAIE,IAAI,GAAG,EAAX;AACA,MAAIC,MAAM,GAAG,EAAb;AAEAP,EAAAA,IAAI,CAACQ,OAAL,CAAa,UAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AACrC,QAAIb,GAAG,GAAGL,YAAY,CAACiB,OAAD,CAAtB,CADqC,CAGrC;;AACA,QAAIhD,GAAG,GAAGyC,cAAc,GAAGO,OAAO,CAACR,gBAAgB,CAACE,aAAjB,CAA+BC,MAAhC,CAAV,GAAoDM,KAA5E,CAJqC,CAMrC;;AACA,QAAIC,SAAS,GAAGd,GAAG,CAACT,GAAJ,CAAQ,YAAR,IAAwBS,GAAxB,GAA8BA,GAAG,CAACe,GAAJ,CAAQ,YAAR,EAAsBnD,GAAtB,CAA9C;AAEA6C,IAAAA,IAAI,CAACO,IAAL,CAAUF,SAAV;AACAJ,IAAAA,MAAM,CAAC9C,GAAD,CAAN,GAAciD,KAAd;AACD,GAXD;AAaA,SAAO;AACLV,IAAAA,IAAI,EAAE,IAAItB,WAAW,CAACG,OAAZ,CAAoBiC,IAAxB,CAA6BR,IAA7B,CADD;AAELC,IAAAA,MAAM,EAAE,IAAI7B,WAAW,CAACG,OAAZ,CAAoBkC,GAAxB,CAA4BR,MAA5B;AAFH,GAAP;AAID;AAED;;;;;;;;AAMA,SAASnC,wBAAT,CAAkC4B,IAAlC,EAAwCgB,OAAxC,EAAiD;AAC/C,MAAIhB,IAAI,CAACiB,IAAL,GAAY,CAAhB,EAAmB;AACjB,WAAOjB,IAAP;AACD;;AAED,MAAIkB,WAAW,GAAGlB,IAAI,CAACmB,GAAL,CAAS,CAAT,EAAYC,MAAZ,GAAqBC,OAArB,EAAlB;AAEA,MAAIC,eAAe,GAAGJ,WAAW,CAACK,MAAZ,CAAmB,UAAUC,IAAV,EAAgB;AACvD,WAAOR,OAAO,CAACS,OAAR,CAAgBD,IAAhB,IAAwB,CAA/B;AACD,GAFqB,CAAtB,CAP+C,CAW/C;AACA;AACA;;AACA,MAAIE,YAAY,GAAGV,OAAO,CAACO,MAAR,CAAe,UAAUC,IAAV,EAAgB;AAChD,WAAON,WAAW,CAACO,OAAZ,CAAoBD,IAApB,IAA4B,CAAnC;AACD,GAFkB,EAEhBG,MAFgB,CAET,UAAUC,QAAV,EAAoBJ,IAApB,EAA0B;AAClCI,IAAAA,QAAQ,CAACJ,IAAD,CAAR,GAAiB,IAAjB;AAAsB,WAAOI,QAAP;AACvB,GAJkB,EAIhB,EAJgB,CAAnB,CAd+C,CAmB/C;;AACA,MAAIC,KAAK,GAAG7B,IAAI,CAACH,GAAL,CAAS,UAAUiC,CAAV,EAAazE,CAAb,EAAgB;AACnC,WAAO,IAAIqB,WAAW,CAACG,OAAZ,CAAoBkC,GAAxB,CAA4BjE,MAAM,CAACK,MAAP,CAAcuE,YAAd,CAA5B,CAAP;AACD,GAFW,CAAZ;AAIA,MAAIK,MAAM,GAAG/B,IAAI,CAACH,GAAL,CAAS,UAAUiC,CAAV,EAAa;AACjC,WAAOA,CAAC,CAACP,MAAF,CAASzC,UAAU,CAACkC,OAAD,CAAnB,CAAP;AACD,GAFY,CAAb;AAIA,SAAOe,MAAM,CAACC,SAAP,CAAiBH,KAAjB,EAAwBhC,GAAxB,CAA4B,UAAU2B,IAAV,EAAgB;AACjD,WAAOA,IAAI,CAACS,MAAL,CAAY,UAAUC,GAAV,EAAezE,GAAf,EAAoB;AACrC,aAAOuD,OAAO,CAACS,OAAR,CAAgBhE,GAAhB,IAAuB,CAAC,CAAxB,GAA4BuD,OAAO,CAACS,OAAR,CAAgBhE,GAAhB,CAA5B,GAAmD0E,gBAA1D;AACD,KAFM,CAAP;AAGD,GAJM,CAAP;AAKD;AAED;;AAEA;;;;;;;AAKA,SAAS9D,mBAAT,CAA6B+D,WAA7B,EAA0C;AACxC,SAAOA,WAAW,CAACzE,cAAZ,CAA2B,kBAA3B,KAAkDyE,WAAW,CAACnC,gBAAZ,CAA6BtC,cAA7B,CAA4C,kBAA5C,CAAlD,IAAqHb,MAAM,CAACiC,IAAP,CAAYqD,WAAW,CAACnC,gBAAZ,CAA6BoC,gBAAzC,EAA2D9E,MAA3D,GAAoE,CAAhM;AACD;AAED;;;;;AAGA,SAASe,OAAT,CAAiB8D,WAAjB,EAA8B;AAC5B,SAAO,CAAC,CAACA,WAAW,CAACpC,IAAd,IAAsBoC,WAAW,CAACpC,IAAZ,CAAiBzC,MAAjB,GAA0B,CAAvD;AACD;AAED;;;;;;;AAKA,SAASgB,gCAAT,CAA0C6D,WAA1C,EAAuD;AACrD,MAAI,CAAC9D,OAAO,CAAC8D,WAAD,CAAR,IAAyB/D,mBAAmB,CAAC+D,WAAD,CAAhD,EAA+D;AAC7D,WAAOA,WAAP;AACD;;AAED,SAAOlF,QAAQ,CAAC,EAAD,EAAKkF,WAAL,EAAkB;AAC/BnC,IAAAA,gBAAgB,EAAE;AAChBoC,MAAAA,gBAAgB,EAAEvF,MAAM,CAACiC,IAAP,CAAYqD,WAAW,CAACpC,IAAZ,CAAiB,CAAjB,CAAZ,EAAiC2B,MAAjC,CAAwC,UAAUW,QAAV,EAAoBC,OAApB,EAA6B;AACrFD,QAAAA,QAAQ,CAACC,OAAD,CAAR,GAAoB;AAAEC,UAAAA,EAAE,EAAED,OAAN;AAAeE,UAAAA,OAAO,EAAE;AAAxB,SAApB;AAEA,eAAOH,QAAP;AACD,OAJiB,EAIf,EAJe;AADF;AADa,GAAlB,CAAf;AASD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.getIncrementer = getIncrementer;\nexports.transformData = transformData;\nexports.getVisibleDataForColumns = getVisibleDataForColumns;\nexports.hasColumnProperties = hasColumnProperties;\nexports.hasData = hasData;\nexports.addColumnPropertiesWhenNoneExist = addColumnPropertiesWhenNoneExist;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//From Immutable docs - https://github.com/facebook/immutable-js/wiki/Predicates\nfunction keyInArray(keys) {\n  var keySet = _immutable2.default.Set(keys);\n  return function (v, k) {\n\n    return keySet.has(k);\n  };\n}\n\nfunction getIncrementer(startIndex) {\n  var key = startIndex;\n  return function () {\n    return key++;\n  };\n}\n\nfunction isImmutableConvertibleValue(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' || value === null || value instanceof Date;\n}\n\n// From https://github.com/facebook/immutable-js/wiki/Converting-from-JS-objects#custom-conversion\nfunction fromJSGreedy(js) {\n  return isImmutableConvertibleValue(js) ? js : Array.isArray(js) ? _immutable2.default.Seq(js).map(fromJSGreedy).toList() : _immutable2.default.Seq(js).map(fromJSGreedy).toMap();\n}\n\nfunction transformData(data, renderProperties) {\n  if (!data) {\n    return {};\n  }\n\n  var hasCustomRowId = renderProperties.rowProperties && renderProperties.rowProperties.rowKey;\n\n  // Validate that the first item in our data has the custom Griddle key\n  if (hasCustomRowId && data.length > 0 && !data[0].hasOwnProperty(renderProperties.rowProperties.rowKey)) {\n    throw new Error('Griddle: Property \\'' + renderProperties.rowProperties.rowKey + '\\' doesn\\'t exist in row data. Please specify a rowKey that exists in <RowDefinition>');\n  }\n\n  var list = [];\n  var lookup = {};\n\n  data.forEach(function (rowData, index) {\n    var map = fromJSGreedy(rowData);\n\n    // if this has a row key use that -- otherwise use Griddle key\n    var key = hasCustomRowId ? rowData[renderProperties.rowProperties.rowKey] : index;\n\n    // if our map object already has griddleKey use that -- otherwise add key as griddleKey\n    var keyedData = map.has('griddleKey') ? map : map.set('griddleKey', key);\n\n    list.push(keyedData);\n    lookup[key] = index;\n  });\n\n  return {\n    data: new _immutable2.default.List(list),\n    lookup: new _immutable2.default.Map(lookup)\n  };\n}\n\n/** Gets the visible data based on columns\n *  @param (List<Map>) data - data collection\n *  @param (array<string>) columns - list of columns to display\n *\n *  TODO: Needs tests\n */\nfunction getVisibleDataForColumns(data, columns) {\n  if (data.size < 1) {\n    return data;\n  }\n\n  var dataColumns = data.get(0).keySeq().toArray();\n\n  var metadataColumns = dataColumns.filter(function (item) {\n    return columns.indexOf(item) < 0;\n  });\n\n  //if columns are specified but aren't in the data\n  //make it up (as null). We will append this column\n  //to the resultant data\n  var magicColumns = columns.filter(function (item) {\n    return dataColumns.indexOf(item) < 0;\n  }).reduce(function (original, item) {\n    original[item] = null;return original;\n  }, {});\n  //combine the metadata and the \"magic\" columns\n  var extra = data.map(function (d, i) {\n    return new _immutable2.default.Map(Object.assign(magicColumns));\n  });\n\n  var result = data.map(function (d) {\n    return d.filter(keyInArray(columns));\n  });\n\n  return result.mergeDeep(extra).map(function (item) {\n    return item.sortBy(function (val, key) {\n      return columns.indexOf(key) > -1 ? columns.indexOf(key) : MAX_SAFE_INTEGER;\n    });\n  });\n}\n\n/* TODO: Add documentation and tests for this whole section!*/\n\n/** Does this initial state object have column properties?\n * @param (object) stateObject - a non-immutable state object for initialization\n *\n * TODO: Needs tests\n */\nfunction hasColumnProperties(stateObject) {\n  return stateObject.hasOwnProperty('renderProperties') && stateObject.renderProperties.hasOwnProperty('columnProperties') && Object.keys(stateObject.renderProperties.columnProperties).length > 0;\n}\n\n/** Does this initial state object have data?\n * @param (object) stateObject - a non-immutable state object for initialization\n */\nfunction hasData(stateObject) {\n  return !!stateObject.data && stateObject.data.length > 0;\n}\n\n/** Gets a new state object (not immutable) that has columnProperties if none exist\n * @param (object) stateObject - a non-immutable state object for initialization\n *\n * TODO: Needs tests\n */\nfunction addColumnPropertiesWhenNoneExist(stateObject) {\n  if (!hasData(stateObject) || hasColumnProperties(stateObject)) {\n    return stateObject;\n  }\n\n  return _extends({}, stateObject, {\n    renderProperties: {\n      columnProperties: Object.keys(stateObject.data[0]).reduce(function (previous, current) {\n        previous[current] = { id: current, visible: true };\n\n        return previous;\n      }, {})\n    }\n  });\n}"]},"metadata":{},"sourceType":"script"}