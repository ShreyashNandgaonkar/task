{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\shree\\\\Desktop\\\\task-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:\\\\Users\\\\shree\\\\Desktop\\\\task-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  padding: 1rem;\\n  table {\\n    border-spacing: 0;\\n    border: 1px solid rgba(0,0,0,0.2);\\n    width: 90rem;\\n    border-left: none;\\n   \\n    :nth-child(even){\\n        background-color: rgba(0,0,0,0.2)\\n    }\\n    \\n\\n    tr {\\n      :last-child {\\n        td {\\n          border-bottom: 0;\\n        }\\n      }\\n      :nth-child(even){\\n        background-color: rgba(213,213,213, 0.2)\\n    }\\n    }\\n\\n    th,\\n    td {\\n      margin: 0;\\n      padding: 0.5rem;\\n      border-bottom: 1px solid rgba(0,0,0,0.2);\\n      \\n\\n      :last-child {\\n        border-right: 0;\\n      }\\n      \\n    }\\n   \\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from\"react\";import styled from\"styled-components\";import{useTable,useSortBy}from\"react-table\";import InfiniteScroll from\"react-infinite-scroll-component\";import makeData from\"./makeData\";var Styles=styled.div(_templateObject());function Table(_ref){var columns=_ref.columns,data=_ref.data,update=_ref.update;// Use the state and functions returned from useTable to build your UI\nvar _useTable=useTable({columns:columns,data:data},useSortBy),getTableProps=_useTable.getTableProps,getTableBodyProps=_useTable.getTableBodyProps,headerGroups=_useTable.headerGroups,rows=_useTable.rows,prepareRow=_useTable.prepareRow,sortBy=_useTable.state.sortBy;React.useEffect(function(){console.log(\"sort\");},[sortBy]);// Render the UI for your table\nreturn/*#__PURE__*/React.createElement(InfiniteScroll,{dataLength:rows.length,next:update,hasMore:true,loader:/*#__PURE__*/React.createElement(\"h4\",null,\"Loading...\")},/*#__PURE__*/React.createElement(\"table\",getTableProps(),/*#__PURE__*/React.createElement(\"thead\",null,headerGroups.map(function(headerGroup){return/*#__PURE__*/React.createElement(\"tr\",headerGroup.getHeaderGroupProps(),headerGroup.headers.map(function(column){return/*#__PURE__*/React.createElement(\"th\",column.getHeaderProps(column.getSortByToggleProps()),column.render(\"Header\"),/*#__PURE__*/React.createElement(\"span\",null,column.isSorted?column.isSortedDesc?\" ðŸ”½\":\" ðŸ”¼\":\"\"));}));})),/*#__PURE__*/React.createElement(\"tbody\",getTableBodyProps(),rows.map(function(row,i){prepareRow(row);return/*#__PURE__*/React.createElement(\"tr\",row.getRowProps(),row.cells.map(function(cell){return/*#__PURE__*/React.createElement(\"td\",cell.getCellProps(),cell.render(\"Cell\"));}));}))));}function ProcessingQue(){var _useState=useState(makeData(40)),_useState2=_slicedToArray(_useState,2),items=_useState2[0],setItems=_useState2[1];var columns=React.useMemo(function(){return[{Header:\"Information\",columns:[{Header:\"Input records\",accessor:\"firstName\"},{Header:\"Valid records\",accessor:\"lastName\"},{Header:\"Actions\",accessor:\"age\"},{Header:\"By\",accessor:\"visits\"},{Header:\"List\",accessor:\"status\"}]},{Header:\"Status\",columns:[{Header:\"Profile Progress\",accessor:\"progress\"}]}];},[]);var fetchMoreData=function fetchMoreData(){setTimeout(function(){setItems(items.concat(makeData(2)));},1500);};var data=React.useMemo(function(){return items;},[items]);return/*#__PURE__*/React.createElement(Styles,null,/*#__PURE__*/React.createElement(Table,{columns:columns,data:data,update:fetchMoreData}));}export default ProcessingQue;","map":{"version":3,"sources":["C:/Users/shree/Desktop/task-master/src/components/Navbar/ProcessingQue.js"],"names":["React","useState","styled","useTable","useSortBy","InfiniteScroll","makeData","Styles","div","Table","columns","data","update","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","sortBy","state","useEffect","console","log","length","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","ProcessingQue","items","setItems","useMemo","Header","accessor","fetchMoreData","setTimeout","concat"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useTable, useSortBy } from \"react-table\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport makeData from \"./makeData\";\n\nconst Styles = styled.div`\n  padding: 1rem;\n  table {\n    border-spacing: 0;\n    border: 1px solid rgba(0,0,0,0.2);\n    width: 90rem;\n    border-left: none;\n   \n    :nth-child(even){\n        background-color: rgba(0,0,0,0.2)\n    }\n    \n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n      :nth-child(even){\n        background-color: rgba(213,213,213, 0.2)\n    }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid rgba(0,0,0,0.2);\n      \n\n      :last-child {\n        border-right: 0;\n      }\n      \n    }\n   \n  }\n`;\n\nfunction Table({ columns, data, update }) {\n  // Use the state and functions returned from useTable to build your UI\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state: { sortBy }\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useSortBy\n  );\n\n  React.useEffect(() => {\n    console.log(\"sort\");\n  }, [sortBy]);\n\n  // Render the UI for your table\n  return (\n    <InfiniteScroll\n      dataLength={rows.length}\n      next={update}\n      hasMore={true}\n      loader={<h4>Loading...</h4>}\n    >\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" ðŸ”½\"\n                        : \" ðŸ”¼\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </InfiniteScroll>\n  );\n}\n\nfunction ProcessingQue() {\n  const [items, setItems] = useState(makeData(40));\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Information\",\n        columns: [\n          {\n            Header: \"Input records\",\n            accessor: \"firstName\"\n          },\n          {\n            Header: \"Valid records\",\n            accessor: \"lastName\"\n          },\n          {\n            Header: \"Actions\",\n            accessor: \"age\"\n          },\n          {\n            Header: \"By\",\n            accessor: \"visits\"\n          },\n          {\n            Header: \"List\",\n            accessor: \"status\"\n          }\n        ]\n      },\n      {\n        Header: \"Status\",\n        columns: [\n         \n          {\n            Header: \"Profile Progress\",\n            accessor: \"progress\"\n          }\n        ]\n      }\n    ],\n    []\n  );\n\n  const fetchMoreData = () => {\n    setTimeout(() => {\n      setItems(items.concat(makeData(2)));\n    }, 1500);\n  };\n\n  const data = React.useMemo(() => items, [items]);\n  return (\n    <Styles>\n      <Table columns={columns} data={data} update={fetchMoreData} />\n    </Styles>\n  );\n}\n\nexport default ProcessingQue;"]},"metadata":{},"sourceType":"module"}