{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cellPropertiesSelector = exports.cellPropertiesSelectorFactory = exports.rowPropertiesSelector = exports.rowDataSelector = exports.cellValueSelector = exports.visibleRowCountSelector = exports.visibleRowIdsSelector = exports.columnTitlesSelector = exports.columnIdsSelector = exports.textSelector = exports.isSettingsVisibleSelector = exports.isSettingsEnabledSelector = exports.customHeadingComponentSelector = exports.customComponentSelector = exports.classNamesForComponentSelector = exports.stylesForComponentSelector = exports.iconsForComponentSelector = exports.iconByNameSelector = exports.sortPropertyByIdSelector = exports.hiddenColumnPropertiesSelector = exports.hiddenColumnsSelector = exports.visibleColumnPropertiesSelector = exports.visibleColumnsSelector = exports.metaDataColumnsSelector = exports.sortedColumnPropertiesSelector = exports.allColumnsSelector = exports.sortColumnsSelector = exports.filterSelector = exports.hasNextSelector = exports.maxPageSelector = exports.hasPreviousSelector = exports.renderPropertiesSelector = exports.recordCountSelector = exports.currentPageSelector = exports.pageSizeSelector = exports.dataLoadingSelector = exports.dataSelector = undefined;\n\nvar _union2 = require('lodash/union');\n\nvar _union3 = _interopRequireDefault(_union2);\n\nvar _isFinite2 = require('lodash/isFinite');\n\nvar _isFinite3 = _interopRequireDefault(_isFinite2);\n\nvar _isEqual2 = require('lodash/isEqual');\n\nvar _isEqual3 = _interopRequireDefault(_isEqual2);\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _reselect = require('reselect');\n\nvar _maxSafeInteger = require('max-safe-integer');\n\nvar _maxSafeInteger2 = _interopRequireDefault(_maxSafeInteger);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar createDeepEqualSelector = (0, _reselect.createSelectorCreator)(_reselect.defaultMemoize, _isEqual3.default); //import { createSelector } from 'reselect';\n\n/** Gets the full dataset currently tracked by Griddle */\n\nvar dataSelector = exports.dataSelector = function dataSelector(state) {\n  return state.get('data');\n};\n\nvar dataLoadingSelector = exports.dataLoadingSelector = (0, _reselect.createSelector)(dataSelector, function (data) {\n  return !data;\n});\n/** Gets the page size */\n\nvar pageSizeSelector = exports.pageSizeSelector = function pageSizeSelector(state) {\n  return state.getIn(['pageProperties', 'pageSize']);\n};\n/** Gets the current page */\n\n\nvar currentPageSelector = exports.currentPageSelector = function currentPageSelector(state) {\n  return state.getIn(['pageProperties', 'currentPage']);\n};\n/** Gets the record count */\n\n\nvar recordCountSelector = exports.recordCountSelector = function recordCountSelector(state) {\n  return state.getIn(['pageProperties', 'recordCount']);\n};\n/** Gets the render properties */\n\n\nvar renderPropertiesSelector = exports.renderPropertiesSelector = function renderPropertiesSelector(state) {\n  return state.get('renderProperties');\n};\n/** Determines if there are previous pages */\n\n\nvar hasPreviousSelector = exports.hasPreviousSelector = (0, _reselect.createSelector)(currentPageSelector, function (currentPage) {\n  return currentPage > 1;\n});\n/** Gets the max page size\n */\n\nvar maxPageSelector = exports.maxPageSelector = (0, _reselect.createSelector)(pageSizeSelector, recordCountSelector, function (pageSize, recordCount) {\n  var calc = recordCount / pageSize;\n  var result = calc > Math.floor(calc) ? Math.floor(calc) + 1 : Math.floor(calc);\n  return (0, _isFinite3.default)(result) ? result : 1;\n});\n/** Determines if there are more pages available. Assumes pageProperties.maxPage is set by the container */\n\nvar hasNextSelector = exports.hasNextSelector = (0, _reselect.createSelector)(currentPageSelector, maxPageSelector, function (currentPage, maxPage) {\n  return currentPage < maxPage;\n});\n/** Gets current filter */\n\nvar filterSelector = exports.filterSelector = function filterSelector(state) {\n  return state.get('filter') || '';\n};\n/** Gets the current sortColumns */\n\n\nvar sortColumnsSelector = exports.sortColumnsSelector = function sortColumnsSelector(state) {\n  return state.get('sortColumns') || [];\n};\n/** Gets all the columns */\n\n\nvar allColumnsSelector = exports.allColumnsSelector = (0, _reselect.createSelector)(dataSelector, renderPropertiesSelector, function (data, renderProperties) {\n  var dataColumns = !data || data.size === 0 ? [] : data.get(0).keySeq().toJSON();\n  var columnPropertyColumns = renderProperties && renderProperties.size > 0 ? // TODO: Make this not so ugly\n  Object.keys(renderProperties.get('columnProperties').toJSON()) : [];\n  return (0, _union3.default)(dataColumns, columnPropertyColumns);\n});\n/** Gets the column properties objects sorted by order\n */\n\nvar sortedColumnPropertiesSelector = exports.sortedColumnPropertiesSelector = (0, _reselect.createSelector)(renderPropertiesSelector, function (renderProperties) {\n  return renderProperties && renderProperties.get('columnProperties') && renderProperties.get('columnProperties').size !== 0 ? renderProperties.get('columnProperties').sortBy(function (col) {\n    return col && col.get('order') || _maxSafeInteger2.default;\n  }) : null;\n});\n/** Gets metadata column ids\n */\n\nvar metaDataColumnsSelector = exports.metaDataColumnsSelector = (0, _reselect.createSelector)(sortedColumnPropertiesSelector, function (sortedColumnProperties) {\n  return sortedColumnProperties ? sortedColumnProperties.filter(function (c) {\n    return c.get('isMetadata');\n  }).keySeq().toJSON() : [];\n});\n/** Gets the visible columns either obtaining the sorted column properties or all columns\n */\n\nvar visibleColumnsSelector = exports.visibleColumnsSelector = (0, _reselect.createSelector)(sortedColumnPropertiesSelector, allColumnsSelector, function (sortedColumnProperties, allColumns) {\n  return sortedColumnProperties ? sortedColumnProperties.filter(function (c) {\n    var isVisible = c.get('visible') || c.get('visible') === undefined;\n    var isMetadata = c.get('isMetadata');\n    return isVisible && !isMetadata;\n  }).keySeq().toJSON() : allColumns;\n});\n/** TODO: add tests and docs\n */\n\nvar visibleColumnPropertiesSelector = exports.visibleColumnPropertiesSelector = (0, _reselect.createSelector)(visibleColumnsSelector, renderPropertiesSelector, function () {\n  var visibleColumns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var renderProperties = arguments[1];\n  return visibleColumns.map(function (c) {\n    var columnProperty = renderProperties.getIn(['columnProperties', c]);\n    return columnProperty && columnProperty.toJSON() || {\n      id: c\n    };\n  });\n});\n/** Gets the possible columns that are currently hidden */\n\nvar hiddenColumnsSelector = exports.hiddenColumnsSelector = (0, _reselect.createSelector)(visibleColumnsSelector, allColumnsSelector, metaDataColumnsSelector, function (visibleColumns, allColumns, metaDataColumns) {\n  var removeColumns = [].concat(_toConsumableArray(visibleColumns), _toConsumableArray(metaDataColumns));\n  return allColumns.filter(function (c) {\n    return removeColumns.indexOf(c) === -1;\n  });\n});\n/** TODO: add tests and docs\n */\n\nvar hiddenColumnPropertiesSelector = exports.hiddenColumnPropertiesSelector = (0, _reselect.createSelector)(hiddenColumnsSelector, renderPropertiesSelector, function () {\n  var hiddenColumns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var renderProperties = arguments[1];\n  return hiddenColumns.map(function (c) {\n    var columnProperty = renderProperties.getIn(['columnProperties', c]);\n    return columnProperty && columnProperty.toJSON() || {\n      id: c\n    };\n  });\n});\n/** Gets the sort property for a given column */\n\nvar sortPropertyByIdSelector = exports.sortPropertyByIdSelector = function sortPropertyByIdSelector(state, _ref) {\n  var columnId = _ref.columnId;\n  var sortProperties = state.get('sortProperties');\n  var individualProperty = sortProperties && sortProperties.size > 0 && sortProperties.find(function (r) {\n    return r.get('id') === columnId;\n  });\n  return individualProperty && individualProperty.toJSON() || null;\n};\n/** Gets the icons property from styles */\n\n\nvar iconByNameSelector = exports.iconByNameSelector = function iconByNameSelector(state, _ref2) {\n  var name = _ref2.name;\n  return state.getIn(['styleConfig', 'icons', name]);\n};\n/** Gets the icons for a component */\n\n\nvar iconsForComponentSelector = exports.iconsForComponentSelector = function iconsForComponentSelector(state, componentName) {\n  var icons = state.getIn(['styleConfig', 'icons', componentName]);\n  return icons && icons.toJS ? icons.toJS() : icons;\n};\n/** Gets a style for a component */\n\n\nvar stylesForComponentSelector = exports.stylesForComponentSelector = function stylesForComponentSelector(state, componentName) {\n  var style = state.getIn(['styleConfig', 'styles', componentName]);\n  return style && style.toJS ? style.toJS() : style;\n};\n/** Gets a classname for a component */\n\n\nvar classNamesForComponentSelector = exports.classNamesForComponentSelector = function classNamesForComponentSelector(state, componentName) {\n  var classNames = state.getIn(['styleConfig', 'classNames', componentName]);\n  return classNames && classNames.toJS ? classNames.toJS() : classNames;\n};\n/** Gets a custom component for a given column\n* TODO: Needs tests\n*/\n\n\nvar customComponentSelector = exports.customComponentSelector = function customComponentSelector(state, _ref3) {\n  var columnId = _ref3.columnId;\n  return state.getIn(['renderProperties', 'columnProperties', columnId, 'customComponent']);\n};\n/** Gets a custom heading component for a given column\n* TODO: Needs tests\n*/\n\n\nvar customHeadingComponentSelector = exports.customHeadingComponentSelector = function customHeadingComponentSelector(state, _ref4) {\n  var columnId = _ref4.columnId;\n  return state.getIn(['renderProperties', 'columnProperties', columnId, 'customHeadingComponent']);\n};\n\nvar isSettingsEnabledSelector = exports.isSettingsEnabledSelector = function isSettingsEnabledSelector(state) {\n  var enableSettings = state.get('enableSettings');\n  return enableSettings === undefined ? true : enableSettings;\n};\n\nvar isSettingsVisibleSelector = exports.isSettingsVisibleSelector = function isSettingsVisibleSelector(state) {\n  return state.get('showSettings');\n};\n\nvar textSelector = exports.textSelector = function textSelector(state, _ref5) {\n  var key = _ref5.key;\n  return state.getIn(['textProperties', key]);\n};\n/** Gets the column ids for the visible columns\n*/\n\n\nvar columnIdsSelector = exports.columnIdsSelector = (0, _reselect.createSelector)(renderPropertiesSelector, visibleColumnsSelector, function (renderProperties, visibleColumns) {\n  var offset = 1000; // TODO: Make this better -- This is pretty inefficient\n\n  return visibleColumns.map(function (k, index) {\n    return {\n      id: renderProperties.getIn(['columnProperties', k, 'id']) || k,\n      order: renderProperties.getIn(['columnProperties', k, 'order']) || offset + index\n    };\n  }).sort(function (first, second) {\n    return first.order - second.order;\n  }).map(function (item) {\n    return item.id;\n  });\n});\n/** Gets the column titles for the visible columns\n */\n\nvar columnTitlesSelector = exports.columnTitlesSelector = (0, _reselect.createSelector)(columnIdsSelector, renderPropertiesSelector, function (columnIds, renderProperties) {\n  return columnIds.map(function (k) {\n    return renderProperties.getIn(['columnProperties', k, 'title']) || k;\n  });\n});\n/** Gets the griddleIds for the visible rows */\n\nvar visibleRowIdsSelector = exports.visibleRowIdsSelector = (0, _reselect.createSelector)(dataSelector, function (currentPageData) {\n  return currentPageData ? currentPageData.map(function (c) {\n    return c.get('griddleKey');\n  }) : new _immutable2.default.List();\n});\n/** Gets the count of visible rows */\n\nvar visibleRowCountSelector = exports.visibleRowCountSelector = (0, _reselect.createSelector)(visibleRowIdsSelector, function (visibleRowIds) {\n  return visibleRowIds.size;\n}); // TODO: Needs tests and jsdoc\n\nvar cellValueSelector = exports.cellValueSelector = function cellValueSelector(state, props) {\n  var griddleKey = props.griddleKey,\n      columnId = props.columnId;\n  var cellProperties = cellPropertiesSelector(state, props); //TODO: Make Griddle key a string in data utils\n\n  var lookup = state.getIn(['lookup', griddleKey.toString()]);\n  var value = state.get('data').get(lookup).getIn(columnId.split('.'));\n  var type = !!cellProperties ? cellProperties.type : 'string';\n\n  switch (type) {\n    case 'date':\n      return value.toLocaleDateString();\n\n    case 'string':\n    default:\n      return value;\n  }\n}; // TODO: Needs jsdoc\n\n\nvar rowDataSelector = exports.rowDataSelector = function rowDataSelector(state, _ref6) {\n  var griddleKey = _ref6.griddleKey;\n  var rowIndex = state.getIn(['lookup', griddleKey.toString()]);\n  return state.get('data').get(rowIndex).toJSON();\n};\n/** Gets the row render properties\n */\n\n\nvar rowPropertiesSelector = exports.rowPropertiesSelector = function rowPropertiesSelector(state) {\n  var row = state.getIn(['renderProperties', 'rowProperties']);\n  return row && row.toJSON() || {};\n};\n/** Gets the column render properties for the specified columnId\n */\n\n\nvar cellPropertiesSelectorFactory = exports.cellPropertiesSelectorFactory = function cellPropertiesSelectorFactory() {\n  var immutableCellPropertiesSelector = function immutableCellPropertiesSelector(state, _ref7) {\n    var columnId = _ref7.columnId;\n    var item = state.getIn(['renderProperties', 'columnProperties', columnId]);\n    return item && item.toJSON() || {};\n  };\n\n  return createDeepEqualSelector(immutableCellPropertiesSelector, function (item) {\n    return item;\n  });\n};\n\nvar cellPropertiesSelector = exports.cellPropertiesSelector = cellPropertiesSelectorFactory();","map":{"version":3,"sources":["C:/Users/shree/Desktop/smarte/node_modules/griddle-react/dist/module/selectors/dataSelectors.js"],"names":["Object","defineProperty","exports","value","cellPropertiesSelector","cellPropertiesSelectorFactory","rowPropertiesSelector","rowDataSelector","cellValueSelector","visibleRowCountSelector","visibleRowIdsSelector","columnTitlesSelector","columnIdsSelector","textSelector","isSettingsVisibleSelector","isSettingsEnabledSelector","customHeadingComponentSelector","customComponentSelector","classNamesForComponentSelector","stylesForComponentSelector","iconsForComponentSelector","iconByNameSelector","sortPropertyByIdSelector","hiddenColumnPropertiesSelector","hiddenColumnsSelector","visibleColumnPropertiesSelector","visibleColumnsSelector","metaDataColumnsSelector","sortedColumnPropertiesSelector","allColumnsSelector","sortColumnsSelector","filterSelector","hasNextSelector","maxPageSelector","hasPreviousSelector","renderPropertiesSelector","recordCountSelector","currentPageSelector","pageSizeSelector","dataLoadingSelector","dataSelector","undefined","_union2","require","_union3","_interopRequireDefault","_isFinite2","_isFinite3","_isEqual2","_isEqual3","_immutable","_immutable2","_reselect","_maxSafeInteger","_maxSafeInteger2","obj","__esModule","default","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","createDeepEqualSelector","createSelectorCreator","defaultMemoize","state","get","createSelector","data","getIn","currentPage","pageSize","recordCount","calc","result","Math","floor","maxPage","renderProperties","dataColumns","size","keySeq","toJSON","columnPropertyColumns","keys","sortBy","col","sortedColumnProperties","filter","c","allColumns","isVisible","isMetadata","visibleColumns","arguments","map","columnProperty","id","metaDataColumns","removeColumns","concat","indexOf","hiddenColumns","_ref","columnId","sortProperties","individualProperty","find","r","_ref2","name","componentName","icons","toJS","style","classNames","_ref3","_ref4","enableSettings","_ref5","key","offset","k","index","order","sort","first","second","item","columnIds","currentPageData","List","visibleRowIds","props","griddleKey","cellProperties","lookup","toString","split","type","toLocaleDateString","_ref6","rowIndex","row","immutableCellPropertiesSelector","_ref7"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cellPropertiesSelector = exports.cellPropertiesSelectorFactory = exports.rowPropertiesSelector = exports.rowDataSelector = exports.cellValueSelector = exports.visibleRowCountSelector = exports.visibleRowIdsSelector = exports.columnTitlesSelector = exports.columnIdsSelector = exports.textSelector = exports.isSettingsVisibleSelector = exports.isSettingsEnabledSelector = exports.customHeadingComponentSelector = exports.customComponentSelector = exports.classNamesForComponentSelector = exports.stylesForComponentSelector = exports.iconsForComponentSelector = exports.iconByNameSelector = exports.sortPropertyByIdSelector = exports.hiddenColumnPropertiesSelector = exports.hiddenColumnsSelector = exports.visibleColumnPropertiesSelector = exports.visibleColumnsSelector = exports.metaDataColumnsSelector = exports.sortedColumnPropertiesSelector = exports.allColumnsSelector = exports.sortColumnsSelector = exports.filterSelector = exports.hasNextSelector = exports.maxPageSelector = exports.hasPreviousSelector = exports.renderPropertiesSelector = exports.recordCountSelector = exports.currentPageSelector = exports.pageSizeSelector = exports.dataLoadingSelector = exports.dataSelector = undefined;\n\nvar _union2 = require('lodash/union');\n\nvar _union3 = _interopRequireDefault(_union2);\n\nvar _isFinite2 = require('lodash/isFinite');\n\nvar _isFinite3 = _interopRequireDefault(_isFinite2);\n\nvar _isEqual2 = require('lodash/isEqual');\n\nvar _isEqual3 = _interopRequireDefault(_isEqual2);\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _reselect = require('reselect');\n\nvar _maxSafeInteger = require('max-safe-integer');\n\nvar _maxSafeInteger2 = _interopRequireDefault(_maxSafeInteger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar createDeepEqualSelector = (0, _reselect.createSelectorCreator)(_reselect.defaultMemoize, _isEqual3.default);\n\n//import { createSelector } from 'reselect';\n\n/** Gets the full dataset currently tracked by Griddle */\nvar dataSelector = exports.dataSelector = function dataSelector(state) {\n  return state.get('data');\n};\n\nvar dataLoadingSelector = exports.dataLoadingSelector = (0, _reselect.createSelector)(dataSelector, function (data) {\n  return !data;\n});\n\n/** Gets the page size */\nvar pageSizeSelector = exports.pageSizeSelector = function pageSizeSelector(state) {\n  return state.getIn(['pageProperties', 'pageSize']);\n};\n\n/** Gets the current page */\nvar currentPageSelector = exports.currentPageSelector = function currentPageSelector(state) {\n  return state.getIn(['pageProperties', 'currentPage']);\n};\n\n/** Gets the record count */\nvar recordCountSelector = exports.recordCountSelector = function recordCountSelector(state) {\n  return state.getIn(['pageProperties', 'recordCount']);\n};\n\n/** Gets the render properties */\nvar renderPropertiesSelector = exports.renderPropertiesSelector = function renderPropertiesSelector(state) {\n  return state.get('renderProperties');\n};\n\n/** Determines if there are previous pages */\nvar hasPreviousSelector = exports.hasPreviousSelector = (0, _reselect.createSelector)(currentPageSelector, function (currentPage) {\n  return currentPage > 1;\n});\n\n/** Gets the max page size\n */\nvar maxPageSelector = exports.maxPageSelector = (0, _reselect.createSelector)(pageSizeSelector, recordCountSelector, function (pageSize, recordCount) {\n  var calc = recordCount / pageSize;\n\n  var result = calc > Math.floor(calc) ? Math.floor(calc) + 1 : Math.floor(calc);\n\n  return (0, _isFinite3.default)(result) ? result : 1;\n});\n\n/** Determines if there are more pages available. Assumes pageProperties.maxPage is set by the container */\nvar hasNextSelector = exports.hasNextSelector = (0, _reselect.createSelector)(currentPageSelector, maxPageSelector, function (currentPage, maxPage) {\n  return currentPage < maxPage;\n});\n\n/** Gets current filter */\nvar filterSelector = exports.filterSelector = function filterSelector(state) {\n  return state.get('filter') || '';\n};\n\n/** Gets the current sortColumns */\nvar sortColumnsSelector = exports.sortColumnsSelector = function sortColumnsSelector(state) {\n  return state.get('sortColumns') || [];\n};\n\n/** Gets all the columns */\nvar allColumnsSelector = exports.allColumnsSelector = (0, _reselect.createSelector)(dataSelector, renderPropertiesSelector, function (data, renderProperties) {\n  var dataColumns = !data || data.size === 0 ? [] : data.get(0).keySeq().toJSON();\n\n  var columnPropertyColumns = renderProperties && renderProperties.size > 0 ?\n  // TODO: Make this not so ugly\n  Object.keys(renderProperties.get('columnProperties').toJSON()) : [];\n\n  return (0, _union3.default)(dataColumns, columnPropertyColumns);\n});\n\n/** Gets the column properties objects sorted by order\n */\nvar sortedColumnPropertiesSelector = exports.sortedColumnPropertiesSelector = (0, _reselect.createSelector)(renderPropertiesSelector, function (renderProperties) {\n  return renderProperties && renderProperties.get('columnProperties') && renderProperties.get('columnProperties').size !== 0 ? renderProperties.get('columnProperties').sortBy(function (col) {\n    return col && col.get('order') || _maxSafeInteger2.default;\n  }) : null;\n});\n\n/** Gets metadata column ids\n */\nvar metaDataColumnsSelector = exports.metaDataColumnsSelector = (0, _reselect.createSelector)(sortedColumnPropertiesSelector, function (sortedColumnProperties) {\n  return sortedColumnProperties ? sortedColumnProperties.filter(function (c) {\n    return c.get('isMetadata');\n  }).keySeq().toJSON() : [];\n});\n\n/** Gets the visible columns either obtaining the sorted column properties or all columns\n */\nvar visibleColumnsSelector = exports.visibleColumnsSelector = (0, _reselect.createSelector)(sortedColumnPropertiesSelector, allColumnsSelector, function (sortedColumnProperties, allColumns) {\n  return sortedColumnProperties ? sortedColumnProperties.filter(function (c) {\n    var isVisible = c.get('visible') || c.get('visible') === undefined;\n    var isMetadata = c.get('isMetadata');\n    return isVisible && !isMetadata;\n  }).keySeq().toJSON() : allColumns;\n});\n\n/** TODO: add tests and docs\n */\nvar visibleColumnPropertiesSelector = exports.visibleColumnPropertiesSelector = (0, _reselect.createSelector)(visibleColumnsSelector, renderPropertiesSelector, function () {\n  var visibleColumns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var renderProperties = arguments[1];\n  return visibleColumns.map(function (c) {\n    var columnProperty = renderProperties.getIn(['columnProperties', c]);\n    return columnProperty && columnProperty.toJSON() || { id: c };\n  });\n});\n\n/** Gets the possible columns that are currently hidden */\nvar hiddenColumnsSelector = exports.hiddenColumnsSelector = (0, _reselect.createSelector)(visibleColumnsSelector, allColumnsSelector, metaDataColumnsSelector, function (visibleColumns, allColumns, metaDataColumns) {\n  var removeColumns = [].concat(_toConsumableArray(visibleColumns), _toConsumableArray(metaDataColumns));\n\n  return allColumns.filter(function (c) {\n    return removeColumns.indexOf(c) === -1;\n  });\n});\n\n/** TODO: add tests and docs\n */\nvar hiddenColumnPropertiesSelector = exports.hiddenColumnPropertiesSelector = (0, _reselect.createSelector)(hiddenColumnsSelector, renderPropertiesSelector, function () {\n  var hiddenColumns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var renderProperties = arguments[1];\n  return hiddenColumns.map(function (c) {\n    var columnProperty = renderProperties.getIn(['columnProperties', c]);\n\n    return columnProperty && columnProperty.toJSON() || { id: c };\n  });\n});\n\n/** Gets the sort property for a given column */\nvar sortPropertyByIdSelector = exports.sortPropertyByIdSelector = function sortPropertyByIdSelector(state, _ref) {\n  var columnId = _ref.columnId;\n\n  var sortProperties = state.get('sortProperties');\n  var individualProperty = sortProperties && sortProperties.size > 0 && sortProperties.find(function (r) {\n    return r.get('id') === columnId;\n  });\n\n  return individualProperty && individualProperty.toJSON() || null;\n};\n\n/** Gets the icons property from styles */\nvar iconByNameSelector = exports.iconByNameSelector = function iconByNameSelector(state, _ref2) {\n  var name = _ref2.name;\n\n  return state.getIn(['styleConfig', 'icons', name]);\n};\n\n/** Gets the icons for a component */\nvar iconsForComponentSelector = exports.iconsForComponentSelector = function iconsForComponentSelector(state, componentName) {\n  var icons = state.getIn(['styleConfig', 'icons', componentName]);\n  return icons && icons.toJS ? icons.toJS() : icons;\n};\n\n/** Gets a style for a component */\nvar stylesForComponentSelector = exports.stylesForComponentSelector = function stylesForComponentSelector(state, componentName) {\n  var style = state.getIn(['styleConfig', 'styles', componentName]);\n  return style && style.toJS ? style.toJS() : style;\n};\n\n/** Gets a classname for a component */\nvar classNamesForComponentSelector = exports.classNamesForComponentSelector = function classNamesForComponentSelector(state, componentName) {\n  var classNames = state.getIn(['styleConfig', 'classNames', componentName]);\n  return classNames && classNames.toJS ? classNames.toJS() : classNames;\n};\n\n/** Gets a custom component for a given column\n* TODO: Needs tests\n*/\nvar customComponentSelector = exports.customComponentSelector = function customComponentSelector(state, _ref3) {\n  var columnId = _ref3.columnId;\n\n  return state.getIn(['renderProperties', 'columnProperties', columnId, 'customComponent']);\n};\n\n/** Gets a custom heading component for a given column\n* TODO: Needs tests\n*/\nvar customHeadingComponentSelector = exports.customHeadingComponentSelector = function customHeadingComponentSelector(state, _ref4) {\n  var columnId = _ref4.columnId;\n\n  return state.getIn(['renderProperties', 'columnProperties', columnId, 'customHeadingComponent']);\n};\n\nvar isSettingsEnabledSelector = exports.isSettingsEnabledSelector = function isSettingsEnabledSelector(state) {\n  var enableSettings = state.get('enableSettings');\n\n  return enableSettings === undefined ? true : enableSettings;\n};\n\nvar isSettingsVisibleSelector = exports.isSettingsVisibleSelector = function isSettingsVisibleSelector(state) {\n  return state.get('showSettings');\n};\n\nvar textSelector = exports.textSelector = function textSelector(state, _ref5) {\n  var key = _ref5.key;\n\n  return state.getIn(['textProperties', key]);\n};\n\n/** Gets the column ids for the visible columns\n*/\nvar columnIdsSelector = exports.columnIdsSelector = (0, _reselect.createSelector)(renderPropertiesSelector, visibleColumnsSelector, function (renderProperties, visibleColumns) {\n  var offset = 1000;\n  // TODO: Make this better -- This is pretty inefficient\n  return visibleColumns.map(function (k, index) {\n    return {\n      id: renderProperties.getIn(['columnProperties', k, 'id']) || k,\n      order: renderProperties.getIn(['columnProperties', k, 'order']) || offset + index\n    };\n  }).sort(function (first, second) {\n    return first.order - second.order;\n  }).map(function (item) {\n    return item.id;\n  });\n});\n\n/** Gets the column titles for the visible columns\n */\nvar columnTitlesSelector = exports.columnTitlesSelector = (0, _reselect.createSelector)(columnIdsSelector, renderPropertiesSelector, function (columnIds, renderProperties) {\n  return columnIds.map(function (k) {\n    return renderProperties.getIn(['columnProperties', k, 'title']) || k;\n  });\n});\n\n/** Gets the griddleIds for the visible rows */\nvar visibleRowIdsSelector = exports.visibleRowIdsSelector = (0, _reselect.createSelector)(dataSelector, function (currentPageData) {\n  return currentPageData ? currentPageData.map(function (c) {\n    return c.get('griddleKey');\n  }) : new _immutable2.default.List();\n});\n\n/** Gets the count of visible rows */\nvar visibleRowCountSelector = exports.visibleRowCountSelector = (0, _reselect.createSelector)(visibleRowIdsSelector, function (visibleRowIds) {\n  return visibleRowIds.size;\n});\n\n// TODO: Needs tests and jsdoc\nvar cellValueSelector = exports.cellValueSelector = function cellValueSelector(state, props) {\n  var griddleKey = props.griddleKey,\n      columnId = props.columnId;\n\n  var cellProperties = cellPropertiesSelector(state, props);\n\n  //TODO: Make Griddle key a string in data utils\n  var lookup = state.getIn(['lookup', griddleKey.toString()]);\n\n  var value = state.get('data').get(lookup).getIn(columnId.split('.'));\n  var type = !!cellProperties ? cellProperties.type : 'string';\n  switch (type) {\n    case 'date':\n      return value.toLocaleDateString();\n    case 'string':\n    default:\n      return value;\n  }\n};\n\n// TODO: Needs jsdoc\nvar rowDataSelector = exports.rowDataSelector = function rowDataSelector(state, _ref6) {\n  var griddleKey = _ref6.griddleKey;\n\n  var rowIndex = state.getIn(['lookup', griddleKey.toString()]);\n  return state.get('data').get(rowIndex).toJSON();\n};\n\n/** Gets the row render properties\n */\nvar rowPropertiesSelector = exports.rowPropertiesSelector = function rowPropertiesSelector(state) {\n  var row = state.getIn(['renderProperties', 'rowProperties']);\n\n  return row && row.toJSON() || {};\n};\n\n/** Gets the column render properties for the specified columnId\n */\nvar cellPropertiesSelectorFactory = exports.cellPropertiesSelectorFactory = function cellPropertiesSelectorFactory() {\n  var immutableCellPropertiesSelector = function immutableCellPropertiesSelector(state, _ref7) {\n    var columnId = _ref7.columnId;\n\n    var item = state.getIn(['renderProperties', 'columnProperties', columnId]);\n\n    return item && item.toJSON() || {};\n  };\n\n  return createDeepEqualSelector(immutableCellPropertiesSelector, function (item) {\n    return item;\n  });\n};\n\nvar cellPropertiesSelector = exports.cellPropertiesSelector = cellPropertiesSelectorFactory();"]},"metadata":{},"sourceType":"script"}